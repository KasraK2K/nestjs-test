var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.39,1,1.915]],["body/controllers/AppController.html",[0,2.34,1,3.224,2,1.928,3,0.427,4,0.362,5,0.3,6,3.495,7,0.427,8,2.123,9,4.748,10,1.591,11,0.037,12,0.988,13,4.223,14,1.75,15,0.874,16,0.778,17,1.2,18,2.786,19,3.495,20,0.427,21,0.076,22,3.495,23,1.928,24,1.591,25,4.223,26,0.025,27,0.03,28,0.025]],["title/modules/AppModule.html",[29,1.39,30,1.915]],["body/modules/AppModule.html",[1,3.212,2,2.104,3,0.36,4,0.305,5,0.253,11,0.037,16,0.896,17,1.013,18,2.891,19,2.95,20,0.36,21,0.064,26,0.021,27,0.027,28,0.021,29,2.332,30,3.786,31,1.8,32,1.8,33,2.242,34,2.242,35,1.8,36,3.212,37,2.242,38,2.95,39,2.95,40,2.95,41,3.214,42,3.214,43,2.899,44,2.242,45,2.242,46,3.565,47,3.29,48,2.545,49,1.8,50,3.565,51,2.545,52,2.545,53,3.565,54,2.545,55,3.565,56,3.565,57,0.92,58,1.628,59,3.565,60,3.565,61,3.565]],["title/injectables/AppService.html",[18,1.537,62,1.39]],["body/injectables/AppService.html",[3,0.441,4,0.374,5,0.31,7,0.441,8,2.167,9,4.802,11,0.036,12,1.022,14,1.81,15,0.892,16,0.663,17,1.241,18,2.641,20,0.441,21,0.078,24,1.646,26,0.026,27,0.031,28,0.026,62,2.388,63,2.748,64,3.615,65,4.369,66,3.615,67,4.369]],["title/classes/AssignLeadToManagerDto.html",[21,0.055,68,1.537]],["body/classes/AssignLeadToManagerDto.html",[3,0.381,4,0.323,5,0.267,7,0.381,10,1.799,11,0.036,12,1.117,15,0.94,16,0.725,20,0.381,21,0.086,26,0.022,27,0.028,28,0.022,57,1.353,68,2.41,69,1.419,70,1.637,71,4.337,72,2.37,73,1.117,74,2.942,75,3.297,76,0.725,77,3.003,78,5.511,79,5.511,80,5.511,81,5.511,82,4.774,83,3.767,84,3.767,85,3.297,86,1.72,87,5.241,88,2.114,89,3.003,90,4.774]],["title/interfaces/BulkInsertResponseInterface.html",[91,1.147,92,1.262]],["body/interfaces/BulkInsertResponseInterface.html",[3,0.393,4,0.334,5,0.276,7,0.393,11,0.036,15,1.034,20,0.538,26,0.023,27,0.029,28,0.023,73,1.141,76,0.846,91,2.005,92,2.02,93,2.185,94,2.449,95,3.508,96,3.508,97,3.508,98,2.284,99,2.816,100,0.928,101,2.461,102,2.225,103,2.461,104,2.185,105,1.966]],["title/classes/CreateLeadManagerDto.html",[21,0.055,106,1.39]],["body/classes/CreateLeadManagerDto.html",[3,0.42,4,0.356,5,0.295,7,0.42,10,1.567,11,0.036,12,0.974,15,0.866,16,0.771,20,0.42,21,0.091,26,0.024,27,0.03,28,0.024,57,1.311,69,1.567,70,1.586,72,2.617,73,1.188,76,0.631,77,2.617,85,3.194,86,1.899,88,2.335,89,2.617,100,1.044,106,2.319,107,4.202,108,2.97,109,4.16,110,3.625,111,3.625,112,2.97]],["title/interfaces/ErrorReasonInterface.html",[91,1.147,99,1.537]],["body/interfaces/ErrorReasonInterface.html",[3,0.383,4,0.325,5,0.269,7,0.383,11,0.036,15,1.071,20,0.531,26,0.022,27,0.028,28,0.022,73,1.121,76,0.864,91,1.98,92,1.569,93,2.126,94,2.382,95,2.382,96,2.382,97,2.382,98,1.98,99,2.653,100,1.084,101,2.876,102,2.601,103,2.876,104,3.099,105,1.912]],["title/controllers/LeadController.html",[0,1.39,113,1.915]],["body/controllers/LeadController.html",[0,0.902,2,0.902,3,0.199,4,0.169,5,0.262,7,0.199,8,1.256,10,1.907,11,0.037,12,1.184,14,2.097,15,0.932,16,0.804,17,0.561,20,0.199,21,0.035,22,1.634,23,1.384,24,1.907,26,0.012,27,0.018,28,0.012,74,2.841,76,0.744,86,0.902,92,0.818,98,1.775,100,0.934,113,1.907,114,1.41,115,1.634,116,1.41,117,3.002,118,2.633,119,2.633,120,2.633,121,2.633,122,2.954,123,2.633,124,2.633,125,2.633,126,1.41,127,2.633,128,1.975,129,1.975,130,2.476,131,2.476,132,2.826,133,1.41,134,2.796,135,2.954,136,1.684,137,3.052,138,1.975,139,1.142,140,1.384,141,2.164,142,1.975,143,2.603,144,1.975,145,3.052,146,2.508,147,2.508,148,1.41,149,3.031,150,1.975,151,3.031,152,1.975,153,1.41,154,3.031,155,1.975,156,1.41,157,3.031,158,1.975,159,1.41,160,3.031,161,1.975,162,1.634,163,1.634,164,1.634,165,1.256,166,1.634,167,3.052,168,1.634,169,3.693,170,1.975,171,3.031,172,1.634,173,1.256,174,0.902,175,1.142,176,0.902,177,1.975,178,1.634,179,1.634,180,0.997,181,0.997,182,1.907,183,1.862,184,1.634,185,1.41,186,1.41,187,0.744,188,1.41,189,1.634,190,1.41,191,1.53,192,1.41,193,1.108,194,1.41,195,1.975,196,1.975,197,0.997,198,0.818,199,1.975,200,1.634,201,2.508,202,2.555,203,1.975,204,1.634,205,1.634,206,1.975,207,1.634,208,1.975,209,4.137,210,1.975,211,1.975,212,1.975,213,1.975,214,1.975,215,1.975,216,1.975,217,1.975,218,1.634,219,1.634]],["title/classes/LeadCredentialsDto.html",[21,0.055,134,1.537]],["body/classes/LeadCredentialsDto.html",[3,0.349,4,0.296,5,0.245,7,0.349,10,2.009,11,0.037,12,1.248,15,1,16,0.685,20,0.349,21,0.081,26,0.02,27,0.026,28,0.02,69,1.3,73,1.056,76,0.809,77,3.354,85,3.48,86,1.575,88,1.937,89,3.354,98,1.7,100,0.957,101,2.538,102,2.295,103,2.538,108,2.463,110,3.589,111,3.806,112,2.463,134,2.278,220,4.578,221,2.855,222,3.45,223,3.221,224,4.511,225,4.511,226,3.45,227,3.45,228,3.45,229,3.45,230,3.45,231,3.45,232,4.511,233,3.45,234,3.45,235,3.45,236,3.45,237,3.45,238,3.45,239,3.45]],["title/classes/LeadEntity.html",[21,0.055,187,1.147]],["body/classes/LeadEntity.html",[3,0.26,4,0.221,5,0.183,7,0.26,10,2.178,11,0.037,12,1.353,15,0.964,16,0.56,20,0.26,21,0.046,26,0.015,27,0.022,28,0.015,57,0.665,69,0.971,73,0.864,76,0.915,98,1.776,100,0.989,101,2.179,102,1.971,103,2.179,136,1.686,139,1.391,175,0.971,187,1.391,240,2.132,241,2.073,242,3.572,243,3.139,244,3.563,245,2.715,246,2.423,247,3.082,248,4.129,249,3.572,250,4.734,251,2.577,252,4.297,253,2.132,254,4.297,255,2.577,256,2.132,257,3.572,258,2.966,259,2.132,260,2.577,261,2.577,262,2.577,263,3.056,264,2.577,265,2.577,266,2.577,267,2.068,268,2.132,269,2.577,270,2.577,271,2.577,272,2.132,273,2.577,274,2.132,275,2.577,276,3.572,277,2.577,278,1.84,279,1.446,280,3.056,281,3.056,282,2.132,283,2.132,284,3.693,285,3.056,286,2.132,287,2.132,288,3.056,289,2.577,290,2.577,291,2.577,292,2.132,293,2.132,294,1.621,295,2.132,296,2.577]],["title/interfaces/LeadInterface.html",[91,1.147,105,1.537]],["body/interfaces/LeadInterface.html",[3,0.39,4,0.331,5,0.274,7,0.39,11,0.036,15,1.068,20,0.536,26,0.023,27,0.028,28,0.023,73,1.135,76,0.844,91,1.997,92,1.6,93,2.167,94,2.429,95,2.429,96,2.429,97,2.429,98,1.997,99,2.448,100,1.091,101,2.892,102,2.615,103,2.892,104,2.167,105,2.448]],["title/controllers/LeadManagerController.html",[0,1.39,297,1.915]],["body/controllers/LeadManagerController.html",[0,0.664,2,0.664,3,0.147,4,0.125,5,0.103,7,0.147,8,0.985,10,1.865,11,0.037,12,1.158,14,2.051,15,0.931,16,0.792,17,0.413,20,0.147,21,0.026,23,1.377,24,1.77,26,0.009,27,0.014,28,0.009,51,1.038,52,1.038,57,1.278,58,2.306,66,2.496,68,2.197,70,1.577,75,3.177,76,0.751,86,0.664,98,1.554,100,0.979,106,1.987,115,1.203,117,2.976,130,2.499,131,2.499,132,2.802,136,1.377,137,2.496,139,0.548,140,0.664,143,2.191,145,2.496,146,1.967,147,1.967,162,1.203,163,1.203,164,1.967,165,0.985,166,1.203,167,2.496,168,1.203,169,2.883,172,1.203,173,0.985,174,0.664,175,0.896,176,0.664,180,0.734,181,0.734,182,1.495,187,0.548,189,1.203,191,2.292,192,1.038,193,0.816,194,1.038,197,1.759,198,1.25,200,1.203,201,2.496,202,2.292,204,1.203,205,1.203,207,1.203,218,2.496,219,1.203,223,1.038,246,2.156,267,1.803,279,0.816,297,1.495,298,1.038,299,3.484,300,2.153,301,2.377,302,2.153,303,2.153,304,2.153,305,2.153,306,2.153,307,2.153,308,2.153,309,2.153,310,1.038,311,2.377,312,1.454,313,2.377,314,1.454,315,1.454,316,3.45,317,1.038,318,1.454,319,1.454,320,1.454,321,1.038,322,2.377,323,1.454,324,1.454,325,3.016,326,3.484,327,1.454,328,1.454,329,1.038,330,2.377,331,1.454,332,1.038,333,2.377,334,1.454,335,1.038,336,2.377,337,1.454,338,1.038,339,2.377,340,1.454,341,1.038,342,2.292,343,2.377,344,1.454,345,1.038,346,2.377,347,1.203,348,2.377,349,2.377,350,1.454,351,2.377,352,1.038,353,2.377,354,1.454,355,1.523,356,1.203,357,1.038,358,1.897,359,1.038,360,0.915,361,0.734,362,1.038,363,1.038,364,1.038,365,1.203,366,1.038,367,1.203,368,1.454,369,1.454,370,1.454,371,1.038,372,1.454,373,1.454,374,1.454,375,1.454,376,2.377,377,2.377,378,2.153,379,1.038,380,2.377,381,1.454,382,1.454,383,3.841,384,1.454,385,1.454,386,1.454,387,1.454,388,1.454,389,1.454,390,1.454,391,1.454,392,1.454,393,1.454,394,1.454,395,1.454,396,1.454,397,1.454,398,1.967,399,1.454,400,1.454,401,1.454,402,1.454,403,1.454,404,1.454,405,1.454,406,1.454,407,1.454,408,1.454]],["title/classes/LeadManagerEntity.html",[21,0.055,267,1.262]],["body/classes/LeadManagerEntity.html",[3,0.281,4,0.238,5,0.197,7,0.281,10,2.101,11,0.037,12,1.305,15,0.831,16,0.591,20,0.281,21,0.05,26,0.016,27,0.023,28,0.016,57,1.161,69,1.046,70,1.77,73,0.911,76,0.902,98,1.837,100,1.013,139,1.467,175,1.046,187,1.934,241,2.186,242,3.722,243,3.229,244,3.665,245,2.829,248,4.248,249,3.722,250,4.034,252,4.404,253,2.298,254,4.404,256,2.298,257,3.222,258,3.067,259,3.222,263,3.222,267,1.613,268,2.298,272,2.298,274,2.298,276,3.722,278,4.046,280,3.222,281,3.222,282,2.298,283,2.298,285,2.298,286,2.298,287,2.298,288,3.222,292,2.298,293,2.298,294,1.747,295,2.298,345,1.982,409,2.298,410,2.777,411,2.777,412,2.777,413,3.894,414,2.777,415,2.777,416,2.777,417,2.777,418,2.777,419,2.777,420,2.777,421,2.777,422,2.777]],["title/modules/LeadManagerModule.html",[29,1.39,41,1.709]],["body/modules/LeadManagerModule.html",[2,2.122,3,0.365,4,0.309,5,0.256,11,0.037,16,0.899,17,1.026,20,0.365,21,0.065,26,0.021,27,0.027,28,0.021,29,2.346,31,1.823,32,1.823,33,2.271,34,2.271,35,1.823,36,3.232,37,2.271,41,3.225,43,2.923,44,2.271,45,2.271,47,2.578,48,2.578,49,1.823,57,1.326,58,1.649,70,1.128,100,0.687,297,3.232,352,2.578,355,2.901,356,2.988,423,2.988,424,2.988,425,3.611,426,2.027,427,2.988,428,3.611,429,4.647,430,3.611,431,2.122,432,2.988,433,3.317,434,3.611,435,3.611,436,3.611,437,3.611,438,1.823,439,3.611]],["title/classes/LeadManagerRepository.html",[21,0.055,426,1.709]],["body/classes/LeadManagerRepository.html",[3,0.149,4,0.126,5,0.105,7,0.149,8,0.995,11,0.037,12,1.186,14,2.011,15,0.934,16,0.769,17,0.418,20,0.149,21,0.026,23,1.389,24,1.829,26,0.014,27,0.014,28,0.009,57,1.369,58,2.355,68,2.209,69,0.555,70,1.61,73,0.562,74,0.826,75,2.87,76,0.737,100,1.042,104,2.17,106,1.998,117,2.953,130,2.451,131,2.451,132,2.809,136,1.389,139,0.905,140,1.097,165,1.454,173,0.61,174,0.672,175,0.905,176,1.097,180,0.743,181,0.743,182,1.511,187,0.555,191,2.643,197,2.094,198,2.137,202,2.787,241,1.348,243,0.926,245,0.926,246,1.97,247,1.051,267,1.602,279,0.826,294,1.511,300,2.172,302,2.172,303,2.172,304,1.715,305,2.172,306,1.715,307,1.715,308,1.715,309,2.172,310,1.051,316,3.682,317,1.051,321,1.715,329,1.051,332,1.715,335,1.715,338,1.715,341,1.051,342,2.304,345,1.051,347,1.218,357,1.051,358,1.914,359,1.051,360,0.926,361,0.743,362,1.051,363,1.051,378,2.506,398,3.2,426,1.348,431,1.603,432,1.218,438,1.536,440,1.218,441,2.172,442,2.517,443,2.402,444,1.472,445,2.402,446,1.472,447,1.472,448,1.218,449,1.472,450,1.472,451,1.218,452,2.208,453,1.472,454,1.472,455,1.472,456,1.472,457,1.472,458,1.472,459,1.472,460,1.051,461,1.218,462,1.472,463,1.218,464,1.988,465,1.218,466,1.218,467,1.051,468,1.472,469,2.402,470,2.506,471,3.867,472,2.904,473,2.517,474,2.517,475,3.465,476,1.472,477,2.517,478,1.472,479,2.517,480,1.472,481,1.472,482,1.218,483,1.472,484,1.472,485,1.218,486,1.051,487,1.472,488,1.472,489,1.472,490,1.472,491,1.472,492,1.472,493,1.472,494,1.218,495,1.472,496,1.472,497,1.472,498,1.218,499,3.51,500,2.402,501,1.472,502,1.218,503,1.218,504,1.472,505,1.218,506,1.472,507,1.472,508,1.472]],["title/injectables/LeadManagerService.html",[62,1.39,355,1.537]],["body/injectables/LeadManagerService.html",[3,0.191,4,0.162,5,0.134,7,0.191,8,1.214,11,0.037,12,1.266,14,2.169,15,0.978,16,0.794,17,0.537,20,0.191,21,0.034,23,1.638,24,1.972,26,0.011,27,0.017,28,0.011,49,0.954,57,1.043,58,2.504,62,1.337,63,1.188,68,2.437,70,1.712,73,0.685,75,3.293,76,0.809,100,1.03,106,2.204,117,3.042,130,2.691,131,2.691,132,2.931,136,1.638,139,0.712,140,0.863,165,1.675,173,0.783,174,0.863,175,1.104,176,0.863,180,0.954,181,0.954,197,2.041,198,1.214,202,2.643,246,2.268,267,1.675,279,1.06,300,2.561,302,2.561,303,2.561,304,2.091,305,2.561,306,2.091,307,2.091,308,2.091,309,2.561,310,1.349,316,2.561,317,1.349,321,2.091,329,1.349,332,2.091,335,2.091,338,2.091,341,1.349,342,2.519,355,1.479,357,1.349,358,2.257,359,1.349,360,1.188,361,0.954,362,1.349,363,1.349,371,2.091,426,2.597,427,1.563,438,1.479,442,2.968,448,1.563,451,1.563,452,2.542,460,1.349,509,1.563,510,1.889,511,2.929,512,1.889,513,1.889,514,1.889,515,1.889,516,1.889,517,1.889,518,1.889,519,1.889,520,1.889,521,1.889,522,2.929,523,1.889,524,1.563,525,1.889,526,1.889,527,1.889,528,1.889,529,1.889,530,1.889,531,1.889,532,1.889,533,1.889,534,1.889,535,1.889]],["title/modules/LeadModule.html",[29,1.39,42,1.709]],["body/modules/LeadModule.html",[2,2.249,3,0.4,4,0.339,5,0.281,11,0.037,16,0.876,17,1.125,20,0.4,21,0.071,26,0.023,27,0.029,28,0.023,29,2.448,31,1.999,32,1.999,33,2.491,34,2.491,35,1.999,36,3.373,37,2.491,42,3.302,43,3.099,44,2.491,45,2.491,47,2.827,48,2.827,49,1.999,113,3.373,183,2.97,184,3.276,431,1.808,536,3.276,537,3.276,538,3.959,539,3.276,540,3.959,541,3.959]],["title/classes/LeadRepository.html",[21,0.055,431,1.39]],["body/classes/LeadRepository.html",[3,0.19,4,0.161,5,0.286,7,0.19,8,1.209,11,0.037,12,1.197,14,2.063,15,0.922,16,0.756,17,0.534,20,0.19,21,0.034,23,1.632,24,1.876,26,0.011,27,0.017,28,0.011,57,1.244,69,0.708,73,0.683,74,2.449,76,0.731,92,0.778,95,2.249,96,1.182,97,1.835,99,1.473,100,0.917,102,0.858,104,2.592,105,1.473,116,2.552,117,2.983,118,2.552,119,2.552,120,2.552,121,2.082,122,2.877,123,2.082,124,2.082,125,2.552,126,1.341,127,2.552,130,2.432,131,2.432,132,2.797,133,1.341,134,2.797,135,2.877,136,1.632,139,1.099,140,1.332,141,2.082,148,2.082,153,2.082,156,2.082,159,1.341,165,1.67,173,0.778,174,0.858,175,1.099,176,1.332,180,0.949,181,0.949,185,1.341,186,1.341,187,1.099,188,1.341,190,1.341,191,2.582,197,1.805,198,2.063,202,2.639,241,1.637,243,1.835,244,1.341,246,1.055,247,1.341,258,1.182,294,2.249,431,1.332,438,1.805,441,2.552,452,2.535,461,1.555,463,1.555,464,1.555,466,1.555,467,1.341,470,2.552,472,2.958,473,2.958,474,2.958,475,3.296,477,1.555,479,2.414,482,2.414,486,1.341,503,2.414,505,2.414,542,1.555,543,2.917,544,1.879,545,1.879,546,1.879,547,1.555,548,1.879,549,1.879,550,1.879,551,1.879,552,1.879,553,1.879,554,1.879,555,1.341,556,1.879,557,1.879,558,2.917,559,1.879,560,1.879,561,1.879,562,1.879,563,1.879,564,1.879,565,1.879,566,1.879,567,1.879,568,2.917,569,1.879,570,1.879,571,2.917,572,1.879,573,1.879,574,1.879,575,1.879,576,1.879,577,1.879,578,1.879]],["title/injectables/LeadService.html",[62,1.39,183,1.537]],["body/injectables/LeadService.html",[3,0.224,4,0.19,5,0.281,7,0.224,8,1.37,11,0.037,12,1.277,14,2.173,15,0.957,16,0.796,17,0.63,20,0.224,21,0.04,23,1.807,24,1.976,26,0.013,27,0.019,28,0.013,49,1.119,57,1.022,62,1.51,63,1.394,73,0.774,74,2.635,76,0.796,92,0.918,100,0.999,117,3.044,118,2.825,119,2.825,120,2.825,121,2.361,122,3.133,123,2.361,124,2.361,125,2.825,126,1.582,127,2.825,130,2.648,131,2.648,132,2.89,133,1.582,134,2.863,135,3.133,136,1.807,139,1.246,140,1.51,141,2.361,148,2.361,153,2.361,156,2.361,159,1.582,165,1.818,173,0.918,174,1.012,175,1.246,176,1.012,180,1.119,181,1.119,183,1.67,185,1.582,186,1.582,187,0.835,188,1.582,190,1.582,191,1.119,197,2.215,198,1.64,202,2.648,245,1.394,371,2.361,431,2.248,438,1.67,452,2.76,465,1.834,475,1.582,485,1.834,486,1.582,498,1.834,502,1.834,524,1.834,539,1.834,547,1.834,579,1.834,580,2.216,581,3.308,582,2.216,583,2.216,584,2.216,585,2.216,586,2.216,587,2.216,588,2.216,589,2.216,590,3.308,591,2.216,592,2.216,593,2.216,594,2.216,595,2.216,596,2.216,597,2.216]],["title/interfaces/SearchLeadManagerAndCount.html",[91,1.147,361,1.537]],["body/interfaces/SearchLeadManagerAndCount.html",[3,0.436,4,0.37,5,0.306,7,0.436,11,0.036,16,0.655,20,0.436,26,0.035,27,0.03,28,0.025,70,1.347,73,1.215,76,0.788,91,1.626,93,2.422,98,2.098,267,2.394,279,2.422,360,2.714,361,2.621,494,4.782,598,3.57]],["title/classes/UpdateLeadManagerDto.html",[21,0.055,342,1.537]],["body/classes/UpdateLeadManagerDto.html",[3,0.402,4,0.341,5,0.283,7,0.402,10,1.5,11,0.037,12,0.932,15,0.843,16,0.853,20,0.402,21,0.089,26,0.023,27,0.029,28,0.023,57,1.388,69,1.5,70,1.544,72,2.505,73,1.157,76,0.604,77,2.505,85,3.11,86,1.818,88,2.235,89,2.505,100,1.024,106,1.818,108,2.843,110,3.529,111,3.529,112,2.843,241,2.235,342,2.496,358,2.505,379,2.843,599,4.091,600,3.982,601,3.982,602,3.982,603,3.982,604,3.982]],["title/coverage.html",[605,2.963]],["body/coverage.html",[0,2.006,1,1.673,5,0.189,6,2.201,11,0.037,18,1.343,21,0.099,26,0.016,27,0.022,28,0.016,35,1.343,54,1.899,57,1.134,58,2.465,62,2.006,64,2.201,68,1.343,70,1.816,71,2.201,72,2.764,76,0.404,91,1.802,92,1.102,94,2.764,99,1.343,105,1.343,106,1.215,107,2.201,113,1.673,114,3.137,134,1.343,165,1.102,173,1.565,183,1.343,187,1.002,193,2.121,198,1.102,220,2.201,221,2.201,240,2.201,267,1.102,278,1.899,297,1.673,298,3.606,342,1.343,355,1.343,361,1.343,364,1.899,366,3.137,409,2.201,426,1.493,431,1.215,433,1.899,440,2.201,509,2.201,542,2.201,555,1.899,579,2.201,598,2.201,599,2.201,605,1.899,606,2.66,607,2.66,608,2.66,609,6.25,610,4.783,611,2.201,612,5.942,613,5.975,614,3.126,615,2.201,616,2.201,617,2.201,618,2.201,619,3.636,620,2.201,621,3.778,622,3.778,623,2.66,624,4.393,625,4.393,626,2.66,627,2.66,628,2.66,629,2.697,630,2.66,631,2.66,632,2.66]],["title/dependencies.html",[32,1.848,633,2.545]],["body/dependencies.html",[11,0.037,17,1.018,21,0.083,26,0.021,27,0.027,28,0.021,32,1.809,49,1.809,51,2.558,52,2.558,86,1.636,88,2.011,143,2.254,174,1.636,175,1.929,176,1.636,178,2.965,179,3.826,182,2.254,352,2.558,378,2.558,460,2.558,467,2.558,634,5.119,635,3.583,636,3.583,637,3.583,638,3.583,639,3.583,640,3.583,641,4.623,642,3.583,643,3.583,644,3.583,645,3.583,646,3.583,647,3.583,648,3.583,649,3.583,650,3.583,651,3.583,652,3.583,653,3.583,654,3.583,655,3.583,656,3.583,657,3.583,658,3.583,659,3.583,660,3.583,661,3.583,662,3.583,663,3.583,664,3.583,665,3.583,666,3.583,667,3.583,668,3.583,669,3.583,670,3.583,671,3.583,672,3.583,673,3.583,674,3.583,675,3.583,676,3.583,677,3.583,678,3.583,679,3.583,680,3.583,681,3.583,682,3.583]],["title/miscellaneous/functions.html",[683,1.601,684,3.029]],["body/miscellaneous/functions.html",[7,0.482,11,0.032,26,0.028,27,0.032,28,0.028,35,2.933,629,3.407,683,3.002,684,3.949,685,3.949]],["title/index.html",[7,0.257,686,2.545,687,2.545]],["body/index.html",[4,0.318,11,0.036,26,0.022,27,0.028,28,0.022,193,2.081,441,2.646,605,2.646,688,3.707,689,3.707,690,4.725,691,3.707,692,3.707,693,3.707,694,3.707,695,3.707,696,3.707,697,5.202,698,3.707,699,3.707,700,3.707,701,5.879,702,3.707,703,3.707,704,3.707,705,5.785,706,3.707,707,3.707,708,4.725,709,3.707,710,3.707,711,3.707,712,3.707,713,4.725,714,4.725,715,3.707,716,3.707,717,3.707,718,4.725,719,4.725,720,3.707,721,3.707,722,3.707,723,3.707,724,3.707,725,3.067,726,3.707,727,3.707,728,3.707,729,3.707,730,3.067,731,3.707,732,3.707,733,3.707,734,3.707,735,3.707,736,3.707,737,3.707,738,3.707,739,3.707,740,3.707,741,3.707,742,3.707,743,3.707]],["title/modules.html",[31,2.096]],["body/modules.html",[11,0.032,26,0.027,27,0.032,28,0.027,30,2.922,31,2.345,41,2.607,42,2.607,725,4.754,744,5.745,745,5.745,746,5.745]],["title/overview.html",[747,3.435]],["body/overview.html",[2,1.844,11,0.035,18,2.732,26,0.024,27,0.029,28,0.024,29,1.844,30,3.807,31,2.04,32,2.04,33,2.541,34,2.541,35,2.04,36,2.541,37,2.541,38,3.343,39,3.343,40,3.343,41,3.258,42,3.258,43,3.137,44,2.541,45,2.541,63,2.541,69,1.522,93,2.267,183,2.732,355,2.732,423,3.343,424,3.343,536,3.343,537,3.343,747,3.343,748,5.41,749,4.04,750,4.04]],["title/miscellaneous/variables.html",[683,1.601,751,3.029]],["body/miscellaneous/variables.html",[5,0.183,7,0.261,11,0.037,24,0.973,26,0.015,27,0.022,28,0.015,54,2.64,58,1.179,70,0.806,76,0.716,100,0.491,101,1.303,102,1.179,103,1.303,114,1.843,116,2.64,139,2.229,140,2.701,143,1.624,165,1.532,173,1.955,191,2.521,192,2.64,193,2.648,194,2.64,198,1.532,223,1.843,258,2.326,298,3.565,364,2.64,365,2.136,366,3.71,367,3.576,379,1.843,433,2.64,438,1.303,470,1.843,555,2.64,611,2.136,614,2.136,615,2.136,616,3.06,617,2.136,618,3.06,619,2.136,620,3.06,629,1.843,683,1.624,685,2.136,730,2.136,751,2.136,752,2.581,753,4.321,754,4.718,755,3.698,756,3.698,757,2.581,758,2.581,759,2.581,760,2.581,761,3.698,762,2.581,763,2.581,764,2.581,765,2.581,766,2.581,767,2.581,768,2.581,769,2.581,770,2.581,771,2.581,772,2.581,773,2.581,774,2.581,775,2.581,776,2.581,777,2.581,778,2.581,779,2.581,780,2.581,781,2.581,782,2.581,783,2.581,784,2.581,785,2.581,786,2.581,787,2.581,788,2.581,789,2.581,790,2.581,791,3.698,792,2.581,793,2.581,794,2.581,795,2.581,796,2.581,797,2.581,798,2.581,799,3.698,800,2.581,801,2.581,802,2.581,803,2.581,804,2.581,805,2.581,806,2.581,807,3.698,808,3.698,809,2.581,810,3.698,811,3.698,812,2.581,813,3.698,814,2.581,815,3.698,816,2.581,817,2.581,818,2.581,819,2.581,820,2.581,821,2.581,822,2.581,823,2.581,824,2.581,825,2.581,826,2.581,827,2.581,828,2.581]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["0.0.3",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.2.31",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["0.21.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["09183619290",{"_index":237,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["09183619290'})@isstring()@length(11)@matches(/(^(09)[0123459]\\d{8",{"_index":222,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["1",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.6.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1000",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10084;&#65039",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.2",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["23505",{"_index":474,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["3",{"_index":748,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["3.2.2",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["3.3.4",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":750,"title":{},"body":{"overview.html":{}}}],["4.17.21",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["4.4.1",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["4.7.15",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["4c13",{"_index":80,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["5.2.6",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6934a808",{"_index":78,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["7.0.3",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["7.6.13",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":749,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":466,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["_.assign(lead",{"_index":505,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["_.assign(leadmanager",{"_index":469,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["__dirname",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a23c",{"_index":81,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["again",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":477,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["amazing",{"_index":726,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["amqplib",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":85,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["apiproperty({example",{"_index":77,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["apitags",{"_index":189,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["apitags('lead",{"_index":368,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["apitags('leads",{"_index":195,"title":{},"body":{"controllers/LeadController.html":{}}}],["app",{"_index":703,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":695,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asc",{"_index":482,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["assign",{"_index":377,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["assignleadtomanager",{"_index":300,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["assignleadtomanager(assignleadtomanagerdto",{"_index":310,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["assignleadtomanagerdto",{"_index":68,"title":{"classes/AssignLeadToManagerDto.html":{}},"body":{"classes/AssignLeadToManagerDto.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"coverage.html":{}}}],["assignleadtonewmanager",{"_index":301,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["assignleadtonewmanager(leadmanager",{"_index":313,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["assignoldestleadtomanager",{"_index":442,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["assignoldestleadtomanager(leadmanager",{"_index":448,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["async",{"_index":117,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["author",{"_index":736,"title":{},"body":{"index.html":{}}}],["await",{"_index":202,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["axios",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":727,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":554,"title":{},"body":{"classes/LeadRepository.html":{}}}],["badrequestexception('file",{"_index":567,"title":{},"body":{"classes/LeadRepository.html":{}}}],["baseentity",{"_index":242,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["bcryptjs",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":162,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["body('interest",{"_index":389,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["body(validationpipe",{"_index":201,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["boolean",{"_index":136,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":746,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":744,"title":{},"body":{"modules.html":{}}}],["build",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":691,"title":{},"body":{"index.html":{}}}],["bulkdata",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulkdata.split('\\r\\n",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bulkinsert",{"_index":118,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["bulkinsert(file",{"_index":126,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["bulkinsertresponseinterface",{"_index":92,"title":{"interfaces/BulkInsertResponseInterface.html":{}},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{}}}],["bulktoleadobject",{"_index":555,"title":{},"body":{"classes/LeadRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bulktoleadobject(file",{"_index":569,"title":{},"body":{"classes/LeadRepository.html":{}}}],["cache",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":472,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["cellphone",{"_index":103,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"miscellaneous/variables.html":{}}}],["channel",{"_index":402,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["channel.ack(originalmsg",{"_index":408,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["class",{"_index":21,"title":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"classes/UpdateLeadManagerDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":69,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"classes/UpdateLeadManagerDto.html":{},"overview.html":{}}}],["client",{"_index":373,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["clientproxy",{"_index":348,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["clientsmodule",{"_index":428,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["clientsmodule.register",{"_index":435,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_leadmanagermodule",{"_index":423,"title":{},"body":{"modules/LeadManagerModule.html":{},"overview.html":{}}}],["cluster_leadmanagermodule_providers",{"_index":424,"title":{},"body":{"modules/LeadManagerModule.html":{},"overview.html":{}}}],["cluster_leadmodule",{"_index":536,"title":{},"body":{"modules/LeadModule.html":{},"overview.html":{}}}],["cluster_leadmodule_providers",{"_index":537,"title":{},"body":{"modules/LeadModule.html":{},"overview.html":{}}}],["column",{"_index":250,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["column()@generated('increment",{"_index":272,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["column({nullable",{"_index":265,"title":{},"body":{"classes/LeadEntity.html":{}}}],["columns",{"_index":292,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["common/utils/bulk.utils",{"_index":556,"title":{},"body":{"classes/LeadRepository.html":{}}}],["compression",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":182,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"dependencies.html":{}}}],["config.get('db",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('events",{"_index":365,"title":{},"body":{"controllers/LeadManagerController.html":{},"miscellaneous/variables.html":{}}}],["config.get('pagination",{"_index":192,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"miscellaneous/variables.html":{}}}],["config.get('rmq",{"_index":367,"title":{},"body":{"controllers/LeadManagerController.html":{},"miscellaneous/variables.html":{}}}],["config.get('server",{"_index":194,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"miscellaneous/variables.html":{}}}],["config/rabbitmq.config",{"_index":434,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["config/typeorm.config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":463,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["conflictexception('leadmanager",{"_index":476,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["conflictexception('this",{"_index":500,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["conflictexception(error.detail",{"_index":503,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["connection",{"_index":460,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"dependencies.html":{}}}],["console.log(`${leadmanager.name",{"_index":406,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["const",{"_index":191,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":371,"title":{},"body":{"controllers/LeadManagerController.html":{},"injectables/LeadManagerService.html":{},"injectables/LeadService.html":{}}}],["constructor(leadmanagerrepository",{"_index":510,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["constructor(leadrepository",{"_index":580,"title":{},"body":{"injectables/LeadService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/LeadController.html":{}}}],["context",{"_index":325,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["context.getchannelref",{"_index":403,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["context.getmessage",{"_index":405,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}},"body":{"controllers/AppController.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"coverage.html":{}}}],["controller('lead",{"_index":369,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["controller('leads",{"_index":196,"title":{},"body":{"controllers/LeadController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["count",{"_index":494,"title":{},"body":{"classes/LeadManagerRepository.html":{},"interfaces/SearchLeadManagerAndCount.html":{}}}],["coverage",{"_index":605,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":379,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/UpdateLeadManagerDto.html":{},"miscellaneous/variables.html":{}}}],["created_at",{"_index":243,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["createdatecolumn",{"_index":280,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["createdatecolumn({name",{"_index":253,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["createlead",{"_index":119,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["createlead(leadcredentialsdto",{"_index":133,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["createleadmanager",{"_index":302,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["createleadmanager(createleadmanagerdto",{"_index":317,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["createleadmanagerdto",{"_index":106,"title":{"classes/CreateLeadManagerDto.html":{}},"body":{"classes/CreateLeadManagerDto.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{}}}],["credentials.dto",{"_index":186,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["credentials.dto.ts",{"_index":221,"title":{},"body":{"classes/LeadCredentialsDto.html":{},"coverage.html":{}}}],["credentials.dto.ts:14",{"_index":231,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["credentials.dto.ts:19",{"_index":230,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["credentials.dto.ts:23",{"_index":228,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["credentials.dto.ts:31",{"_index":226,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["cross",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":349,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["d9c1c2f42157",{"_index":90,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["d9c1c2f42157'})@isuuid",{"_index":82,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["database",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":252,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["dbconfig",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig.database",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.host",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.password",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.port",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.synchronize",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.type",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.username",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":135,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["default",{"_index":139,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["delete",{"_index":164,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["delete('/:leadid",{"_index":157,"title":{},"body":{"controllers/LeadController.html":{}}}],["delete('/:leadmanagerid",{"_index":339,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["delete('/remove/:leadid",{"_index":154,"title":{},"body":{"controllers/LeadController.html":{}}}],["delete('/remove/:leadmanagerid",{"_index":333,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["deleted_at",{"_index":244,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadRepository.html":{}}}],["deletedatecolumn",{"_index":281,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["deletedatecolumn({name",{"_index":256,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["deleteresult",{"_index":180,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":696,"title":{},"body":{"index.html":{}}}],["development",{"_index":704,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["dto/assign",{"_index":363,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["dto/create",{"_index":357,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["dto/lead",{"_index":185,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["dto/update",{"_index":359,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["durable",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e2e",{"_index":715,"title":{},"body":{"index.html":{}}}],["each",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eager",{"_index":413,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["efficient",{"_index":692,"title":{},"body":{"index.html":{}}}],["email",{"_index":102,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{},"miscellaneous/variables.html":{}}}],["email/phone",{"_index":574,"title":{},"body":{"classes/LeadRepository.html":{}}}],["emit",{"_index":376,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["emitter",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"controllers/LeadManagerController.html":{},"dependencies.html":{}}}],["endpoints",{"_index":200,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["entities",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/lead",{"_index":360,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"interfaces/SearchLeadManagerAndCount.html":{}}}],["entities/lead.entity",{"_index":188,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["entity",{"_index":282,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["entity('lead_managers",{"_index":419,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["entity('leads",{"_index":289,"title":{},"body":{"classes/LeadEntity.html":{}}}],["entity.{js,ts",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":461,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["entityrepository(leadentity",{"_index":557,"title":{},"body":{"classes/LeadRepository.html":{}}}],["entityrepository(leadmanagerentity",{"_index":468,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["env",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["error",{"_index":104,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["error.code",{"_index":473,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["error.message",{"_index":497,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["errorreasoninterface",{"_index":99,"title":{"interfaces/ErrorReasonInterface.html":{}},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{},"coverage.html":{}}}],["errors",{"_index":568,"title":{},"body":{"classes/LeadRepository.html":{}}}],["errors.length",{"_index":578,"title":{},"body":{"classes/LeadRepository.html":{}}}],["errors.push",{"_index":571,"title":{},"body":{"classes/LeadRepository.html":{}}}],["event",{"_index":218,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["eventemitter",{"_index":374,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["eventemitter2",{"_index":353,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["eventemittermodule",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["events",{"_index":364,"title":{},"body":{"controllers/LeadManagerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":89,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["exist",{"_index":478,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["exists",{"_index":573,"title":{},"body":{"classes/LeadRepository.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["express",{"_index":179,"title":{},"body":{"controllers/LeadController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":127,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["extends",{"_index":241,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["f3b6",{"_index":79,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["failds",{"_index":95,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{}}}],["faker",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":141,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["family_name",{"_index":101,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.buffer.tostring",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileinterceptor",{"_index":177,"title":{},"body":{"controllers/LeadController.html":{}}}],["found",{"_index":486,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["framework",{"_index":690,"title":{},"body":{"index.html":{}}}],["free",{"_index":394,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["function",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":684,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":283,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["generated('increment",{"_index":293,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["get('/:leadid",{"_index":149,"title":{},"body":{"controllers/LeadController.html":{}}}],["get('/:leadmanagerid",{"_index":322,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["get('/old/lead/to_ssign",{"_index":151,"title":{},"body":{"controllers/LeadController.html":{}}}],["get('/search/:name",{"_index":336,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["getalllead",{"_index":120,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["getalllead(options",{"_index":547,"title":{},"body":{"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["getalllead(page",{"_index":142,"title":{},"body":{"controllers/LeadController.html":{}}}],["getallleadmanager",{"_index":303,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["getallleadmanager(options",{"_index":451,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["getallleadmanager(page",{"_index":319,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["getcustomrepository",{"_index":462,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["getcustomrepository(leadrepository",{"_index":443,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getleadbyid",{"_index":121,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["getleadbyid(leadid",{"_index":148,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["getleadmanagerbyid",{"_index":304,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["getleadmanagerbyid(leadmanagerid",{"_index":321,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["getoldleadtoassign",{"_index":122,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["getting",{"_index":686,"title":{"index.html":{}},"body":{}}],["grow",{"_index":722,"title":{},"body":{"index.html":{}}}],["hello",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"controllers/LeadManagerController.html":{}}}],["hello(leadmanager",{"_index":324,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["helmet",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":733,"title":{},"body":{"index.html":{}}}],["host",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hour",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":740,"title":{},"body":{"index.html":{}}}],["id",{"_index":245,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadService.html":{}}}],["identifier",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["imports",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["inject",{"_index":347,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{}}}],["inject('lead_manager_service",{"_index":372,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/LeadManagerService.html":{},"injectables/LeadService.html":{}},"body":{"injectables/AppService.html":{},"injectables/LeadManagerService.html":{},"injectables/LeadService.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/LeadManagerService.html":{},"injectables/LeadService.html":{},"overview.html":{}}}],["injectconnection",{"_index":523,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["injectrepository",{"_index":524,"title":{},"body":{"injectables/LeadManagerService.html":{},"injectables/LeadService.html":{}}}],["injectrepository(leadmanagerrepository",{"_index":525,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["injectrepository(leadrepository",{"_index":591,"title":{},"body":{"injectables/LeadService.html":{}}}],["installation",{"_index":700,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":702,"title":{},"body":{"index.html":{}}}],["interest",{"_index":246,"title":{},"body":{"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{}}}],["intereste",{"_index":392,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["interested",{"_index":407,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["interface",{"_index":91,"title":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"interfaces/SearchLeadManagerAndCount.html":{}},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"coverage.html":{}}}],["interfaces",{"_index":93,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"overview.html":{}}}],["interfaces/lead.interface",{"_index":190,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["interfaces/search.interface",{"_index":362,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["internalservererrorexception",{"_index":464,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["internalservererrorexception(error.message",{"_index":479,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["invalid",{"_index":576,"title":{},"body":{"classes/LeadRepository.html":{}}}],["ip",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipaginationoptions",{"_index":452,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["isemail",{"_index":232,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["isleadmanagerinterest",{"_index":305,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["isleadmanagerinterest(leadmanagerid",{"_index":329,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["isnotempty",{"_index":110,"title":{},"body":{"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["isstring",{"_index":111,"title":{},"body":{"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["isuuid",{"_index":87,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["join",{"_index":729,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":284,"title":{},"body":{"classes/LeadEntity.html":{}}}],["kamil",{"_index":737,"title":{},"body":{"index.html":{}}}],["karami",{"_index":235,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["karami'})@isstring()@isnotempty",{"_index":229,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["kasra",{"_index":112,"title":{},"body":{"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["kasra'})@isstring()@isnotempty",{"_index":108,"title":{},"body":{"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["kasra_k2k@yahoo.com",{"_index":236,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["kasra_k2k@yahoo.com'})@isemail",{"_index":227,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["lead",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{}}}],["lead.controller",{"_index":540,"title":{},"body":{"modules/LeadModule.html":{}}}],["lead.repository",{"_index":539,"title":{},"body":{"modules/LeadModule.html":{},"injectables/LeadService.html":{}}}],["lead.service",{"_index":184,"title":{},"body":{"controllers/LeadController.html":{},"modules/LeadModule.html":{}}}],["lead/entities/lead.entity",{"_index":345,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{}}}],["lead/lead.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["lead/lead.repository",{"_index":432,"title":{},"body":{"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{}}}],["lead_manager",{"_index":247,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["lead_manager_service",{"_index":436,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["leadcontroller",{"_index":113,"title":{"controllers/LeadController.html":{}},"body":{"controllers/LeadController.html":{},"modules/LeadModule.html":{},"coverage.html":{}}}],["leadcredentialsdto",{"_index":134,"title":{"classes/LeadCredentialsDto.html":{}},"body":{"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{}}}],["leadentity",{"_index":187,"title":{"classes/LeadEntity.html":{}},"body":{"controllers/LeadController.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{}}}],["leadentity.lead_manager",{"_index":422,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["leadid",{"_index":74,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["leadinterface",{"_index":105,"title":{"interfaces/LeadInterface.html":{}},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{},"coverage.html":{}}}],["leadmanager",{"_index":316,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["leadmanager.hasownproperty('lead",{"_index":501,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["leadmanager.lead",{"_index":398,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{}}}],["leadmanagercontroller",{"_index":297,"title":{"controllers/LeadManagerController.html":{}},"body":{"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"coverage.html":{}}}],["leadmanagerentity",{"_index":267,"title":{"classes/LeadManagerEntity.html":{}},"body":{"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"coverage.html":{}}}],["leadmanagerentity.lead",{"_index":296,"title":{},"body":{"classes/LeadEntity.html":{}}}],["leadmanagerid",{"_index":75,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["leadmanagermodule",{"_index":41,"title":{"modules/LeadManagerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules.html":{},"overview.html":{}}}],["leadmanagerrepository",{"_index":426,"title":{"classes/LeadManagerRepository.html":{}},"body":{"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"coverage.html":{}}}],["leadmanagers",{"_index":480,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["leadmanagerservice",{"_index":355,"title":{"injectables/LeadManagerService.html":{}},"body":{"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"injectables/LeadManagerService.html":{},"coverage.html":{},"overview.html":{}}}],["leadmodule",{"_index":42,"title":{"modules/LeadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeadModule.html":{},"modules.html":{},"overview.html":{}}}],["leadrepository",{"_index":431,"title":{"classes/LeadRepository.html":{}},"body":{"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{}}}],["leads",{"_index":116,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"miscellaneous/variables.html":{}}}],["leads.length",{"_index":577,"title":{},"body":{"classes/LeadRepository.html":{}}}],["leads.push",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["leadservice",{"_index":183,"title":{"injectables/LeadService.html":{}},"body":{"controllers/LeadController.html":{},"modules/LeadModule.html":{},"injectables/LeadService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["length",{"_index":233,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["length(11",{"_index":238,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["license",{"_index":743,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":719,"title":{},"body":{"index.html":{}}}],["limit",{"_index":143,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["listeners",{"_index":219,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["lodash",{"_index":467,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"dependencies.html":{}}}],["logger",{"_index":165,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger('typeormconfig",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger(leadcontroller.name",{"_index":199,"title":{},"body":{"controllers/LeadController.html":{}}}],["logger(leadmanagercontroller.name",{"_index":370,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["logger(leadmanagerrepository.name",{"_index":445,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["logger(leadmanagerservice.name",{"_index":522,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["logger(leadrepository.name",{"_index":543,"title":{},"body":{"classes/LeadRepository.html":{}}}],["logger(leadservice.name",{"_index":590,"title":{},"body":{"injectables/LeadService.html":{}}}],["love",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manager",{"_index":378,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"dependencies.html":{}}}],["manager.controller",{"_index":430,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["manager.controller.ts",{"_index":298,"title":{},"body":{"controllers/LeadManagerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manager.controller.ts:104",{"_index":344,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:115",{"_index":331,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:132",{"_index":340,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:139",{"_index":334,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:149",{"_index":315,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:158",{"_index":328,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:57",{"_index":318,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:69",{"_index":320,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:81",{"_index":323,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:88",{"_index":337,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.controller.ts:95",{"_index":312,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["manager.dto",{"_index":358,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["manager.dto.ts",{"_index":72,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{}}}],["manager.dto.ts:10",{"_index":600,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{}}}],["manager.dto.ts:11",{"_index":84,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["manager.dto.ts:7",{"_index":83,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{}}}],["manager.dto.ts:8",{"_index":109,"title":{},"body":{"classes/CreateLeadManagerDto.html":{}}}],["manager.entity",{"_index":279,"title":{},"body":{"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"interfaces/SearchLeadManagerAndCount.html":{}}}],["manager.entity.ts",{"_index":409,"title":{},"body":{"classes/LeadManagerEntity.html":{},"coverage.html":{}}}],["manager.entity.ts:23",{"_index":412,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:27",{"_index":416,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:30",{"_index":415,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:36",{"_index":410,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:42",{"_index":417,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:50",{"_index":411,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:53",{"_index":418,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.entity.ts:61",{"_index":414,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["manager.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["manager.module.ts",{"_index":425,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["manager.repository",{"_index":427,"title":{},"body":{"modules/LeadManagerModule.html":{},"injectables/LeadManagerService.html":{}}}],["manager.repository.ts",{"_index":440,"title":{},"body":{"classes/LeadManagerRepository.html":{},"coverage.html":{}}}],["manager.repository.ts:101",{"_index":449,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:113",{"_index":459,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:128",{"_index":455,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:144",{"_index":458,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:148",{"_index":456,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:33",{"_index":446,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:34",{"_index":444,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:36",{"_index":450,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:51",{"_index":453,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:61",{"_index":454,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:68",{"_index":457,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.repository.ts:85",{"_index":447,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["manager.service",{"_index":356,"title":{},"body":{"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{}}}],["manager.service.ts",{"_index":509,"title":{},"body":{"injectables/LeadManagerService.html":{},"coverage.html":{}}}],["manager.service.ts:14",{"_index":511,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:21",{"_index":514,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:29",{"_index":515,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:35",{"_index":516,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:39",{"_index":519,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:43",{"_index":512,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:51",{"_index":513,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:59",{"_index":521,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:69",{"_index":517,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:79",{"_index":520,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager.service.ts:85",{"_index":518,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["manager/dto/assign",{"_index":71,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"coverage.html":{}}}],["manager/dto/create",{"_index":107,"title":{},"body":{"classes/CreateLeadManagerDto.html":{},"coverage.html":{}}}],["manager/dto/update",{"_index":599,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{},"coverage.html":{}}}],["manager/entities/lead",{"_index":278,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"coverage.html":{}}}],["manager/interfaces/search.interface.ts",{"_index":598,"title":{},"body":{"interfaces/SearchLeadManagerAndCount.html":{},"coverage.html":{}}}],["manager/lead",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["managers",{"_index":299,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["many",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":234,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["matches(/(^(09)[0123459]\\d{8",{"_index":239,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":223,"title":{},"body":{"classes/LeadCredentialsDto.html":{},"controllers/LeadManagerController.html":{},"miscellaneous/variables.html":{}}}],["messagepattern",{"_index":350,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["messagepattern(rmqconfig.message.leadinterestedcreated",{"_index":401,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["messagepattern(undefined.leadinterestedcreated",{"_index":327,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["metadata",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["migration.{js,ts",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":683,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":718,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":224,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["mode",{"_index":708,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":732,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":738,"title":{},"body":{"index.html":{}}}],["name",{"_index":100,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"classes/UpdateLeadManagerDto.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":697,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":742,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":174,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/LeadManagerController.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":602,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{}}}],["nestjs/microservices",{"_index":352,"title":{},"body":{"controllers/LeadManagerController.html":{},"modules/LeadManagerModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":178,"title":{},"body":{"controllers/LeadController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":86,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"controllers/LeadManagerController.html":{},"classes/UpdateLeadManagerDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"injectables/LeadService.html":{},"dependencies.html":{}}}],["new",{"_index":198,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":689,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":465,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadService.html":{}}}],["notfoundexception('lead",{"_index":485,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadService.html":{}}}],["notfoundexception('this",{"_index":504,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["npm",{"_index":701,"title":{},"body":{"index.html":{}}}],["null",{"_index":294,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{}}}],["nullable",{"_index":257,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["number",{"_index":98,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"interfaces/SearchLeadManagerAndCount.html":{}}}],["object",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onetoone",{"_index":285,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["onetoone(type",{"_index":421,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["onetoone(undefined",{"_index":268,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["onevent",{"_index":354,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["onevent(events.leadmanager.free",{"_index":397,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["onevent(undefined.free",{"_index":314,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["open",{"_index":720,"title":{},"body":{"index.html":{}}}],["optional",{"_index":131,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["options",{"_index":438,"title":{},"body":{"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"miscellaneous/variables.html":{}}}],["order",{"_index":563,"title":{},"body":{"classes/LeadRepository.html":{}}}],["originalmsg",{"_index":404,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["overview",{"_index":747,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":633,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":145,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["paginate",{"_index":176,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"dependencies.html":{}}}],["paginate(leadmanagers",{"_index":483,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["paginate(leads",{"_index":560,"title":{},"body":{"classes/LeadRepository.html":{}}}],["pagination",{"_index":173,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagination.limit",{"_index":147,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["pagination.page",{"_index":146,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["param",{"_index":163,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["param('leadid",{"_index":209,"title":{},"body":{"controllers/LeadController.html":{}}}],["param('leadmanagerid",{"_index":383,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["param('name",{"_index":385,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["parseboolpipe",{"_index":346,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["parseintpipe",{"_index":167,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["parser",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["parseuuidpipe",{"_index":169,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["partialtype",{"_index":601,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{}}}],["partialtype(createleadmanagerdto",{"_index":604,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{}}}],["password",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":172,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["patch('/:leadid",{"_index":160,"title":{},"body":{"controllers/LeadController.html":{}}}],["patch('/:leadmanagerid",{"_index":343,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["patch('/assign",{"_index":311,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["patch('/is/interest/:leadmanagerid",{"_index":330,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["payload",{"_index":351,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["per",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pg",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":572,"title":{},"body":{"classes/LeadRepository.html":{}}}],["please",{"_index":730,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":137,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["post('/bulk/insert",{"_index":215,"title":{},"body":{"controllers/LeadController.html":{}}}],["post('/bulk/insert')@useinterceptors(undefined",{"_index":128,"title":{},"body":{"controllers/LeadController.html":{}}}],["prefix",{"_index":115,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["primarygeneratedcolumn",{"_index":286,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":263,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["private",{"_index":197,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["process.env.db_db_name",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_hostname",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_port",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.typeorm_sync",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":710,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":688,"title":{},"body":{"index.html":{}}}],["project",{"_index":721,"title":{},"body":{"index.html":{}}}],["promise",{"_index":132,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["properties",{"_index":73,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["provided",{"_index":575,"title":{},"body":{"classes/LeadRepository.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["query",{"_index":168,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["query('limit",{"_index":205,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["query('page",{"_index":204,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["querybuilder",{"_index":487,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["querybuilder.getmanyandcount",{"_index":492,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["queue",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queueoptions",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rabbitmq",{"_index":400,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["rabbitmqoptions",{"_index":433,"title":{},"body":{"modules/LeadManagerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["ratelimit",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ratelimitconfig",{"_index":616,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":731,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["reason",{"_index":96,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{}}}],["reflect",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["relations",{"_index":295,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["removelead",{"_index":123,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["removelead(leadid",{"_index":153,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["removeleadmanager",{"_index":306,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["removeleadmanager(leadmanagerid",{"_index":332,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["repository",{"_index":441,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"index.html":{}}}],["request",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requests",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resultandcount",{"_index":491,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["resultandcount[0",{"_index":493,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["resultandcount[1",{"_index":495,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["rimraf",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["rmqconfig",{"_index":366,"title":{},"body":{"controllers/LeadManagerController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rmqconfig.queue",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmqconfig.urls",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rmqcontext",{"_index":326,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["route",{"_index":207,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["row",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row.split",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowarray",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowarray[0",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowarray[1",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowarray[2",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rowarray[3",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rows",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":705,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":693,"title":{},"body":{"index.html":{}}}],["search",{"_index":496,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["searchleadmanager",{"_index":307,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["searchleadmanager(name",{"_index":335,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["searchleadmanagerandcount",{"_index":361,"title":{"interfaces/SearchLeadManagerAndCount.html":{}},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"coverage.html":{}}}],["seeding",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["send",{"_index":391,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["server",{"_index":193,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["server.address}/lead",{"_index":382,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["server.address}/leads",{"_index":208,"title":{},"body":{"controllers/LeadController.html":{}}}],["setdescription('&#10084;&#65039",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('test",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setversion('1.0",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":694,"title":{},"body":{"index.html":{}}}],["softdeletelead",{"_index":124,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["softdeletelead(leadid",{"_index":156,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["softdeleteleadmanager",{"_index":308,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["softdeleteleadmanager(leadmanagerid",{"_index":338,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"modules/LeadModule.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"index.html":{}}}],["sponsors",{"_index":724,"title":{},"body":{"index.html":{}}}],["src/.../bulk.utils.ts",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lead",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../lead.controller.ts",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":685,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../rabbitmq.config.ts",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ratelimit.config.ts",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.config.ts",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeorm.config.ts",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/utils/bulk.utils.ts",{"_index":611,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/rabbitmq.config.ts",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/ratelimit.config.ts",{"_index":615,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger.config.ts",{"_index":617,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":619,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lead",{"_index":70,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"modules/LeadManagerModule.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lead/dto/lead",{"_index":220,"title":{},"body":{"classes/LeadCredentialsDto.html":{},"coverage.html":{}}}],["src/lead/entities/lead.entity.ts",{"_index":240,"title":{},"body":{"classes/LeadEntity.html":{},"coverage.html":{}}}],["src/lead/entities/lead.entity.ts:25",{"_index":264,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:29",{"_index":273,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:32",{"_index":271,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:35",{"_index":262,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:38",{"_index":261,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:41",{"_index":251,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:44",{"_index":266,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:50",{"_index":255,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:56",{"_index":275,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:64",{"_index":260,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:67",{"_index":277,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/entities/lead.entity.ts:77",{"_index":270,"title":{},"body":{"classes/LeadEntity.html":{}}}],["src/lead/interfaces/lead.interface.ts",{"_index":94,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"coverage.html":{}}}],["src/lead/lead.controller.ts",{"_index":114,"title":{},"body":{"controllers/LeadController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/lead/lead.controller.ts:41",{"_index":138,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:49",{"_index":144,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:61",{"_index":150,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:68",{"_index":152,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:73",{"_index":161,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:81",{"_index":158,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:88",{"_index":155,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.controller.ts:96",{"_index":129,"title":{},"body":{"controllers/LeadController.html":{}}}],["src/lead/lead.module.ts",{"_index":538,"title":{},"body":{"modules/LeadModule.html":{}}}],["src/lead/lead.repository.ts",{"_index":542,"title":{},"body":{"classes/LeadRepository.html":{},"coverage.html":{}}}],["src/lead/lead.repository.ts:30",{"_index":544,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:32",{"_index":546,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:49",{"_index":548,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:59",{"_index":549,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:63",{"_index":550,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:70",{"_index":553,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:85",{"_index":552,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:89",{"_index":551,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.repository.ts:93",{"_index":545,"title":{},"body":{"classes/LeadRepository.html":{}}}],["src/lead/lead.service.ts",{"_index":579,"title":{},"body":{"injectables/LeadService.html":{},"coverage.html":{}}}],["src/lead/lead.service.ts:12",{"_index":581,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:18",{"_index":583,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:25",{"_index":584,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:31",{"_index":585,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:37",{"_index":586,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:41",{"_index":589,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:48",{"_index":588,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:52",{"_index":587,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/lead/lead.service.ts:56",{"_index":582,"title":{},"body":{"injectables/LeadService.html":{}}}],["src/main.ts",{"_index":629,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":706,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":709,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":711,"title":{},"body":{"index.html":{}}}],["started",{"_index":687,"title":{"index.html":{}},"body":{}}],["starter",{"_index":699,"title":{},"body":{"index.html":{}}}],["statements",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":734,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"classes/UpdateLeadManagerDto.html":{}}}],["success",{"_index":97,"title":{},"body":{"interfaces/BulkInsertResponseInterface.html":{},"interfaces/ErrorReasonInterface.html":{},"interfaces/LeadInterface.html":{},"classes/LeadRepository.html":{}}}],["support",{"_index":725,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":745,"title":{},"body":{"modules.html":{}}}],["swaggerconfig",{"_index":618,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":714,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":717,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":716,"title":{},"body":{"index.html":{}}}],["tests",{"_index":713,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":723,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.client.emit(rmqconfig.message.leadinterestedcreated",{"_index":393,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.createlead(lead",{"_index":570,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.createquerybuilder('lead').orderby",{"_index":559,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.createquerybuilder('lead_managers').orderby",{"_index":481,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.createquerybuilder('lead_managers').where",{"_index":488,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.delete(leadid",{"_index":566,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.delete(leadmanagerid",{"_index":508,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.eventemitter.emit(events.leadmanager.free",{"_index":380,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.findone",{"_index":562,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.findone(leadid",{"_index":561,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.findone(leadmanagerid",{"_index":484,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.getleadbyid(leadid",{"_index":564,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.getleadmanagerbyid(leadmanagerid",{"_index":499,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.leadmanagerrepository.assignleadtomanager",{"_index":530,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.assignoldestleadtomanager",{"_index":531,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.createleadmanager",{"_index":526,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.getallleadmanager(options",{"_index":527,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.getleadmanagerbyid(leadmanagerid",{"_index":528,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.isleadmanagerinterest",{"_index":533,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.removeleadmanager(leadmanagerid",{"_index":535,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.searchleadmanager(name",{"_index":529,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.softdeleteleadmanager",{"_index":534,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerrepository.updateleadmanager",{"_index":532,"title":{},"body":{"injectables/LeadManagerService.html":{}}}],["this.leadmanagerservice.assignleadtomanager",{"_index":387,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.assignoldestleadtomanager(leadmanager",{"_index":399,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.createleadmanager",{"_index":375,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.getallleadmanager",{"_index":381,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.getleadmanagerbyid(leadmanagerid",{"_index":384,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.isleadmanagerinterest",{"_index":390,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.removeleadmanager(leadmanagerid",{"_index":396,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.searchleadmanager(name",{"_index":386,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.softdeleteleadmanager(leadmanagerid",{"_index":395,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadmanagerservice.updateleadmanager",{"_index":388,"title":{},"body":{"controllers/LeadManagerController.html":{}}}],["this.leadrepository.bulkinsert(file",{"_index":597,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadrepository.createlead(leadcredentialsdto",{"_index":592,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadrepository.getalllead(options",{"_index":593,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadrepository.getleadbyid(leadid",{"_index":498,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadService.html":{}}}],["this.leadrepository.getoldleadtoassign",{"_index":502,"title":{},"body":{"classes/LeadManagerRepository.html":{},"injectables/LeadService.html":{}}}],["this.leadrepository.removelead(leadid",{"_index":596,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadrepository.save(lead",{"_index":506,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.leadrepository.softdeletelead(leadid",{"_index":595,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadrepository.updatelead(leadid",{"_index":594,"title":{},"body":{"injectables/LeadService.html":{}}}],["this.leadservice.bulkinsert(file",{"_index":217,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.createlead(leadcredentialsdto",{"_index":203,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.getalllead",{"_index":206,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.getleadbyid(leadid",{"_index":210,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.getoldleadtoassign",{"_index":211,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.removelead(leadid",{"_index":214,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.softdeletelead(leadid",{"_index":213,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.leadservice.updatelead(leadid",{"_index":212,"title":{},"body":{"controllers/LeadController.html":{}}}],["this.save(lead",{"_index":558,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.save(leadmanager",{"_index":471,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["this.softdelete(leadid",{"_index":565,"title":{},"body":{"classes/LeadRepository.html":{}}}],["this.softdelete(leadmanagerid",{"_index":507,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["throw",{"_index":475,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["timestamp",{"_index":254,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["to_tsquery('simple",{"_index":490,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["to_tsvector('simple",{"_index":489,"title":{},"body":{"classes/LeadManagerRepository.html":{}}}],["touch",{"_index":735,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":429,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["transport.rmq",{"_index":437,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["true",{"_index":258,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadRepository.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":470,"title":{},"body":{"classes/LeadManagerRepository.html":{},"classes/LeadRepository.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":741,"title":{},"body":{"index.html":{}}}],["type",{"_index":76,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"interfaces/BulkInsertResponseInterface.html":{},"classes/CreateLeadManagerDto.html":{},"interfaces/ErrorReasonInterface.html":{},"controllers/LeadController.html":{},"classes/LeadCredentialsDto.html":{},"classes/LeadEntity.html":{},"interfaces/LeadInterface.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"interfaces/SearchLeadManagerAndCount.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":175,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadEntity.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerEntity.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{}}}],["typeormmodule.forfeature([leadmanagerrepository",{"_index":439,"title":{},"body":{"modules/LeadManagerModule.html":{}}}],["typeormmodule.forfeature([leadrepository",{"_index":541,"title":{},"body":{"modules/LeadModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":603,"title":{},"body":{"classes/UpdateLeadManagerDto.html":{}}}],["types/dotenv",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":698,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":259,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["undefined)@joincolumn",{"_index":269,"title":{},"body":{"classes/LeadEntity.html":{}}}],["unique",{"_index":287,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["unique(['cellphone",{"_index":291,"title":{},"body":{"classes/LeadEntity.html":{}}}],["unique(['email",{"_index":290,"title":{},"body":{"classes/LeadEntity.html":{}}}],["unique(['name",{"_index":420,"title":{},"body":{"classes/LeadManagerEntity.html":{}}}],["unit",{"_index":712,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":248,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["updatedatecolumn",{"_index":288,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["updatedatecolumn({name",{"_index":274,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["updatelead",{"_index":125,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["updatelead(leadid",{"_index":159,"title":{},"body":{"controllers/LeadController.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["updateleadmanager",{"_index":309,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["updateleadmanager(leadmanagerid",{"_index":341,"title":{},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{}}}],["updateleadmanagerdto",{"_index":342,"title":{"classes/UpdateLeadManagerDto.html":{}},"body":{"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/UpdateLeadManagerDto.html":{},"coverage.html":{}}}],["updateresult",{"_index":181,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{}}}],["uploadedfile",{"_index":171,"title":{},"body":{"controllers/LeadController.html":{}}}],["urls",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useinterceptors",{"_index":170,"title":{},"body":{"controllers/LeadController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":216,"title":{},"body":{"controllers/LeadController.html":{}}}],["username",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":166,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{}}}],["validator",{"_index":88,"title":{},"body":{"classes/AssignLeadToManagerDto.html":{},"classes/CreateLeadManagerDto.html":{},"classes/LeadCredentialsDto.html":{},"classes/UpdateLeadManagerDto.html":{},"dependencies.html":{}}}],["value",{"_index":140,"title":{},"body":{"controllers/LeadController.html":{},"controllers/LeadManagerController.html":{},"classes/LeadManagerRepository.html":{},"injectables/LeadManagerService.html":{},"classes/LeadRepository.html":{},"injectables/LeadService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":751,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":249,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["versioncolumn",{"_index":276,"title":{},"body":{"classes/LeadEntity.html":{},"classes/LeadManagerEntity.html":{}}}],["watch",{"_index":707,"title":{},"body":{"index.html":{}}}],["website",{"_index":739,"title":{},"body":{"index.html":{}}}],["windowms",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["world",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":225,"title":{},"body":{"classes/LeadCredentialsDto.html":{}}}],["you'd",{"_index":728,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/LeadManagerModule.html":{},"modules/LeadModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nLeadManagerModule\n\nLeadManagerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLeadManagerModule->AppModule\n\n\n\n\n\nLeadModule\n\nLeadModule\n\nAppModule -->\n\nLeadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LeadManagerModule\n                        \n                        \n                            LeadModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { typeOrmConfig } from './config/typeorm.config';\nimport { LeadModule } from './lead/lead.module';\nimport { LeadManagerModule } from './lead-manager/lead-manager.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRoot(typeOrmConfig),\n    EventEmitterModule.forRoot(),\n    LeadModule,\n    LeadManagerModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignLeadToManagerDto.html":{"url":"classes/AssignLeadToManagerDto.html","title":"class - AssignLeadToManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignLeadToManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/dto/assign-lead-to-manager.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                leadId\n                            \n                            \n                                leadManagerId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '6934a808-f3b6-4c13-a23c-d9c1c2f42157'})@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/dto/assign-lead-to-manager.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            leadManagerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '6934a808-f3b6-4c13-a23c-d9c1c2f42157'})@IsUUID()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/dto/assign-lead-to-manager.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class AssignLeadToManagerDto {\n  @ApiProperty({ example: '6934a808-f3b6-4c13-a23c-d9c1c2f42157' })\n  @IsUUID()\n  leadId: string;\n\n  @ApiProperty({ example: '6934a808-f3b6-4c13-a23c-d9c1c2f42157' })\n  @IsUUID()\n  leadManagerId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BulkInsertResponseInterface.html":{"url":"interfaces/BulkInsertResponseInterface.html","title":"interface - BulkInsertResponseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BulkInsertResponseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/interfaces/lead.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        all\n                                \n                                \n                                        failds\n                                \n                                \n                                        reason\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all\n                                    \n                                \n                                \n                                    \n                                        all:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        failds\n                                    \n                                \n                                \n                                    \n                                        failds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reason\n                                    \n                                \n                                \n                                    \n                                        reason:         ErrorReasonInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ErrorReasonInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BulkInsertResponseInterface {\n  all: number;\n  success: number;\n  failds: number;\n  reason: ErrorReasonInterface[];\n}\n\nexport interface ErrorReasonInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n  error: string;\n}\n\nexport interface LeadInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLeadManagerDto.html":{"url":"classes/CreateLeadManagerDto.html","title":"class - CreateLeadManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLeadManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/dto/create-lead-manager.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Kasra'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/dto/create-lead-manager.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateLeadManagerDto {\n  @ApiProperty({ example: 'Kasra' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorReasonInterface.html":{"url":"interfaces/ErrorReasonInterface.html","title":"interface - ErrorReasonInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorReasonInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/interfaces/lead.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cellphone\n                                \n                                \n                                        email\n                                \n                                \n                                        error\n                                \n                                \n                                        family_name\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cellphone\n                                    \n                                \n                                \n                                    \n                                        cellphone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BulkInsertResponseInterface {\n  all: number;\n  success: number;\n  failds: number;\n  reason: ErrorReasonInterface[];\n}\n\nexport interface ErrorReasonInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n  error: string;\n}\n\nexport interface LeadInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LeadController.html":{"url":"controllers/LeadController.html","title":"controller - LeadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LeadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/lead.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                leads\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bulkInsert\n                            \n                            \n                                    Async\n                                createLead\n                            \n                            \n                                    Async\n                                getAllLead\n                            \n                            \n                                    Async\n                                getLeadById\n                            \n                            \n                                    Async\n                                getOldLeadToAssign\n                            \n                            \n                                    Async\n                                removeLead\n                            \n                            \n                                    Async\n                                softDeleteLead\n                            \n                            \n                                    Async\n                                updateLead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bulkInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkInsert(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/bulk/insert')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLead(leadCredentialsDto: LeadCredentialsDto, debug: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    debug\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLead(page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pagination.page\n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pagination.limit\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadById(leadId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:leadId')\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOldLeadToAssign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOldLeadToAssign()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/old/lead/to_ssign')\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLead(leadId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/remove/:leadId')\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLead(leadId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:leadId')\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLead(leadId: string, leadCredentialsDto: LeadCredentialsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:leadId')\n                \n            \n\n            \n                \n                    Defined in src/lead/lead.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Logger,\n  ValidationPipe,\n  ParseIntPipe,\n  Query,\n  ParseUUIDPipe,\n  UseInterceptors,\n  UploadedFile,\n  Patch,\n} from '@nestjs/common';\nimport { Pagination } from 'nestjs-typeorm-paginate';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { DeleteResult, UpdateResult } from 'typeorm';\nimport * as config from 'config';\nimport { LeadService } from './lead.service';\nimport { LeadCredentialsDto } from './dto/lead-credentials.dto';\nimport { LeadEntity } from './entities/lead.entity';\nimport { ApiTags } from '@nestjs/swagger';\nimport { BulkInsertResponseInterface } from './interfaces/lead.interface';\n\nconst pagination = config.get('pagination');\nconst server = config.get('server');\n\n@ApiTags('leads')\n@Controller('leads')\nexport class LeadController {\n  private readonly logger = new Logger(LeadController.name);\n\n  constructor(private readonly leadService: LeadService) {}\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  Endpoints                                 */\n  /* -------------------------------------------------------------------------- */\n  @Post()\n  async createLead(\n    @Body(ValidationPipe) leadCredentialsDto: LeadCredentialsDto,\n    debug: boolean = false,\n  ): Promise {\n    return await this.leadService.createLead(leadCredentialsDto, debug);\n  }\n\n  @Get()\n  async getAllLead(\n    @Query('page', ParseIntPipe) page: number = pagination.page,\n    @Query('limit', ParseIntPipe) limit: number = pagination.limit,\n  ): Promise> {\n    return await this.leadService.getAllLead({\n      page,\n      limit,\n      route: `${server.address}/leads`,\n    });\n  }\n\n  @Get('/:leadId')\n  async getLeadById(\n    @Param('leadId', ParseUUIDPipe) leadId: string,\n  ): Promise {\n    return await this.leadService.getLeadById(leadId);\n  }\n\n  @Get('/old/lead/to_ssign')\n  async getOldLeadToAssign() {\n    return await this.leadService.getOldLeadToAssign();\n  }\n\n  @Patch('/:leadId')\n  async updateLead(\n    @Param('leadId', ParseUUIDPipe) leadId: string,\n    @Body(ValidationPipe) leadCredentialsDto: LeadCredentialsDto,\n  ): Promise {\n    return await this.leadService.updateLead(leadId, leadCredentialsDto);\n  }\n\n  @Delete('/:leadId')\n  async softDeleteLead(\n    @Param('leadId', ParseUUIDPipe) leadId: string,\n  ): Promise {\n    return await this.leadService.softDeleteLead(leadId);\n  }\n\n  @Delete('/remove/:leadId')\n  async removeLead(\n    @Param('leadId', ParseUUIDPipe) leadId: string,\n  ): Promise {\n    return await this.leadService.removeLead(leadId);\n  }\n\n  @Post('/bulk/insert')\n  @UseInterceptors(FileInterceptor('file'))\n  async bulkInsert(\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return await this.leadService.bulkInsert(file);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Event Listeners                              */\n  /* -------------------------------------------------------------------------- */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeadCredentialsDto.html":{"url":"classes/LeadCredentialsDto.html","title":"class - LeadCredentialsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeadCredentialsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/dto/lead-credentials.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cellphone\n                            \n                            \n                                email\n                            \n                            \n                                family_name\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cellphone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: '09183619290'})@IsString()@Length(11)@Matches(/(^(09)[0123459]\\d{8}$)/, {message: 'mobile number is wrong'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/dto/lead-credentials.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Kasra_K2K@yahoo.com'})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/dto/lead-credentials.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            family_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Karami'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/dto/lead-credentials.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Kasra'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/dto/lead-credentials.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  Length,\n  Matches,\n} from 'class-validator';\n\nexport class LeadCredentialsDto {\n  @ApiProperty({ example: 'Kasra' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ example: 'Karami' })\n  @IsString()\n  @IsNotEmpty()\n  family_name: string;\n\n  @ApiProperty({ example: 'Kasra_K2K@yahoo.com' })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({ example: '09183619290' })\n  @IsString()\n  @Length(11)\n  @Matches(/(^(09)[0123459]\\d{8}$)/, {\n    message: 'mobile number is wrong',\n  })\n  cellphone: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeadEntity.html":{"url":"classes/LeadEntity.html","title":"class - LeadEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeadEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/entities/lead.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cellphone\n                            \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                email\n                            \n                            \n                                family_name\n                            \n                            \n                                id\n                            \n                            \n                                interest\n                            \n                            \n                                lead_manager\n                            \n                            \n                                name\n                            \n                            \n                                no\n                            \n                            \n                                updated_at\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cellphone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            family_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interest\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lead_manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LeadManagerEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined)@JoinColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            no\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@Generated('increment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @VersionColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead/entities/lead.entity.ts:67\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LeadManagerEntity } from '../../lead-manager/entities/lead-manager.entity';\nimport {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  Generated,\n  JoinColumn,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n  VersionColumn,\n} from 'typeorm';\n\n@Entity('leads')\n@Unique(['email'])\n@Unique(['cellphone'])\nexport class LeadEntity extends BaseEntity {\n  /* -------------------------------------------------------------------------- */\n  /*                                   Columns                                  */\n  /* -------------------------------------------------------------------------- */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @Generated('increment')\n  no: number;\n\n  @Column()\n  name: string;\n\n  @Column()\n  family_name: string;\n\n  @Column()\n  email: string;\n\n  @Column()\n  cellphone: string;\n\n  @Column({ nullable: true })\n  interest: boolean;\n\n  @CreateDateColumn({\n    name: 'created_at',\n    type: 'timestamp',\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    type: 'timestamp',\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n    type: 'timestamp',\n    nullable: true,\n    default: null,\n  })\n  deleted_at: Date;\n\n  @VersionColumn()\n  version: number;\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  Relations                                 */\n  /* -------------------------------------------------------------------------- */\n  @OneToOne(\n    type => LeadManagerEntity,\n    leadManagerEntity => leadManagerEntity.lead,\n  )\n  @JoinColumn()\n  lead_manager: LeadManagerEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LeadInterface.html":{"url":"interfaces/LeadInterface.html","title":"interface - LeadInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LeadInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/interfaces/lead.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cellphone\n                                \n                                \n                                        email\n                                \n                                \n                                        family_name\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cellphone\n                                    \n                                \n                                \n                                    \n                                        cellphone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        family_name\n                                    \n                                \n                                \n                                    \n                                        family_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BulkInsertResponseInterface {\n  all: number;\n  success: number;\n  failds: number;\n  reason: ErrorReasonInterface[];\n}\n\nexport interface ErrorReasonInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n  error: string;\n}\n\nexport interface LeadInterface {\n  name: string;\n  family_name: string;\n  email: string;\n  cellphone: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LeadManagerController.html":{"url":"controllers/LeadManagerController.html","title":"controller - LeadManagerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LeadManagerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/lead-manager.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                lead-managers\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignLeadToManager\n                            \n                            \n                                    Async\n                                assignLeadToNewManager\n                            \n                            \n                                    Async\n                                createLeadManager\n                            \n                            \n                                    Async\n                                GetAllLeadManager\n                            \n                            \n                                    Async\n                                getLeadManagerById\n                            \n                            \n                                    Async\n                                hello\n                            \n                            \n                                    Async\n                                isLeadManagerInterest\n                            \n                            \n                                    Async\n                                removeLeadManager\n                            \n                            \n                                    Async\n                                searchLeadManager\n                            \n                            \n                                    Async\n                                softDeleteLeadManager\n                            \n                            \n                                    Async\n                                updateLeadManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignLeadToManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignLeadToManager(assignLeadToManagerDto: AssignLeadToManagerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/assign')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assignLeadToManagerDto\n                                    \n                                                AssignLeadToManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignLeadToNewManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignLeadToNewManager(leadManager: LeadManagerEntity)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent(undefined.free)\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManager\n                                    \n                                                LeadManagerEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLeadManager(createLeadManagerDto: CreateLeadManagerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLeadManagerDto\n                                    \n                                                CreateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            GetAllLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllLeadManager(page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pagination.page\n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        pagination.limit\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadManagerById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadManagerById(leadManagerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:leadManagerId')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(leadManager: LeadManagerEntity, context: RmqContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @MessagePattern(undefined.leadInterestedCreated)\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManager\n                                    \n                                                LeadManagerEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            RmqContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isLeadManagerInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLeadManagerInterest(leadManagerId: string, interest: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/is/interest/:leadManagerId')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interest\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLeadManager(leadManagerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/remove/:leadManagerId')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchLeadManager(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/search/:name')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLeadManager(leadManagerId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:leadManagerId')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLeadManager(leadManagerId: string, updateLeadManagerDto: UpdateLeadManagerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:leadManagerId')\n                \n            \n\n            \n                \n                    Defined in src/lead-manager/lead-manager.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLeadManagerDto\n                                    \n                                                UpdateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { LeadEntity } from '../lead/entities/lead.entity';\nimport {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  ValidationPipe,\n  Logger,\n  ParseIntPipe,\n  Query,\n  ParseUUIDPipe,\n  Patch,\n  ParseBoolPipe,\n  Inject,\n} from '@nestjs/common';\nimport {\n  ClientProxy,\n  Ctx,\n  MessagePattern,\n  Payload,\n  RmqContext,\n} from '@nestjs/microservices';\nimport { ApiTags } from '@nestjs/swagger';\nimport * as config from 'config';\nimport { Pagination } from 'nestjs-typeorm-paginate';\nimport { EventEmitter2, OnEvent } from '@nestjs/event-emitter';\nimport { LeadManagerService } from './lead-manager.service';\nimport { CreateLeadManagerDto } from './dto/create-lead-manager.dto';\nimport { UpdateLeadManagerDto } from './dto/update-lead-manager.dto';\nimport { LeadManagerEntity } from './entities/lead-manager.entity';\nimport { DeleteResult, UpdateResult } from 'typeorm';\nimport { SearchLeadManagerAndCount } from './interfaces/search.interface';\nimport { AssignLeadToManagerDto } from './dto/assign-lead-to-manager.dto';\n\nconst pagination = config.get('pagination');\nconst server = config.get('server');\nconst events = config.get('events');\nconst RMQConfig = config.get('RMQ');\n\n@ApiTags('lead-managers')\n@Controller('lead-managers')\nexport class LeadManagerController {\n  private readonly logger = new Logger(LeadManagerController.name);\n\n  constructor(\n    @Inject('LEAD_MANAGER_SERVICE') private readonly client: ClientProxy,\n    private readonly leadManagerService: LeadManagerService,\n    private eventEmitter: EventEmitter2,\n  ) {}\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  Endpoints                                 */\n  /* -------------------------------------------------------------------------- */\n  @Post()\n  async createLeadManager(\n    @Body(ValidationPipe) createLeadManagerDto: CreateLeadManagerDto,\n  ): Promise {\n    const leadManager = await this.leadManagerService.createLeadManager(\n      createLeadManagerDto,\n    );\n    // emit event to assign lead to new lead manager after create the new lead manager\n    this.eventEmitter.emit(events.leadManager.free, leadManager);\n    return leadManager;\n  }\n\n  @Get()\n  async GetAllLeadManager(\n    @Query('page', ParseIntPipe) page: number = pagination.page,\n    @Query('limit', ParseIntPipe) limit: number = pagination.limit,\n  ): Promise> {\n    return await this.leadManagerService.GetAllLeadManager({\n      page,\n      limit,\n      route: `${server.address}/lead-managers`,\n    });\n  }\n\n  @Get('/:leadManagerId')\n  async getLeadManagerById(\n    @Param('leadManagerId', ParseUUIDPipe) leadManagerId: string,\n  ): Promise {\n    return this.leadManagerService.getLeadManagerById(leadManagerId);\n  }\n\n  @Get('/search/:name')\n  async searchLeadManager(\n    @Param('name') name: string,\n  ): Promise {\n    return this.leadManagerService.searchLeadManager(name);\n  }\n\n  @Patch('/assign')\n  async assignLeadToManager(\n    @Body(ValidationPipe) assignLeadToManagerDto: AssignLeadToManagerDto,\n  ): Promise {\n    return await this.leadManagerService.assignLeadToManager(\n      assignLeadToManagerDto,\n    );\n  }\n\n  @Patch('/:leadManagerId')\n  async updateLeadManager(\n    @Param('leadManagerId') leadManagerId: string,\n    @Body(ValidationPipe) updateLeadManagerDto: UpdateLeadManagerDto,\n  ): Promise {\n    return await this.leadManagerService.updateLeadManager(\n      leadManagerId,\n      updateLeadManagerDto,\n    );\n  }\n\n  @Patch('/is/interest/:leadManagerId')\n  async isLeadManagerInterest(\n    @Param('leadManagerId') leadManagerId: string,\n    @Body('interest', ParseBoolPipe) interest: boolean,\n  ): Promise {\n    const leadManager = await this.leadManagerService.isLeadManagerInterest(\n      leadManagerId,\n      interest,\n    );\n    // send intereste message\n    if (interest)\n      this.client.emit(RMQConfig.message.leadInterestedCreated, leadManager);\n    // emit event to assign lead to free lead manager\n    this.eventEmitter.emit(events.leadManager.free, leadManager);\n    return leadManager;\n  }\n\n  @Delete('/:leadManagerId')\n  async softDeleteLeadManager(\n    @Param('leadManagerId', ParseUUIDPipe) leadManagerId: string,\n  ): Promise {\n    return await this.leadManagerService.softDeleteLeadManager(leadManagerId);\n  }\n\n  @Delete('/remove/:leadManagerId')\n  async removeLeadManager(\n    @Param('leadManagerId', ParseUUIDPipe) leadManagerId: string,\n  ): Promise {\n    return await this.leadManagerService.removeLeadManager(leadManagerId);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               Event Listeners                              */\n  /* -------------------------------------------------------------------------- */\n  @OnEvent(events.leadManager.free)\n  async assignLeadToNewManager(leadManager: LeadManagerEntity): Promise {\n    if (leadManager.lead) delete leadManager.lead;\n    await this.leadManagerService.assignOldestLeadToManager(leadManager);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  RabbitMQ                                  */\n  /* -------------------------------------------------------------------------- */\n  @MessagePattern(RMQConfig.message.leadInterestedCreated)\n  async hello(\n    @Payload() leadManager: LeadManagerEntity,\n    @Ctx() context: RmqContext,\n  ) {\n    const channel = context.getChannelRef();\n    const originalMsg = context.getMessage();\n    console.log(`${leadManager.name} interested to a lead.`);\n    channel.ack(originalMsg);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeadManagerEntity.html":{"url":"classes/LeadManagerEntity.html","title":"class - LeadManagerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeadManagerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/entities/lead-manager.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                deleted_at\n                            \n                            \n                                id\n                            \n                            \n                                lead\n                            \n                            \n                                name\n                            \n                            \n                                no\n                            \n                            \n                                updated_at\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at', type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleted_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @DeleteDateColumn({name: 'deleted_at', type: 'timestamp', nullable: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn('uuid')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lead\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LeadEntity\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @OneToOne(undefined, undefined, {eager: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            no\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()@Generated('increment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at', type: 'timestamp'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @VersionColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/entities/lead-manager.entity.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LeadEntity } from '../../lead/entities/lead.entity';\nimport {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  Generated,\n  OneToOne,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n  VersionColumn,\n} from 'typeorm';\n\n@Entity('lead_managers')\n@Unique(['name'])\nexport class LeadManagerEntity extends BaseEntity {\n  /* -------------------------------------------------------------------------- */\n  /*                                   Columns                                  */\n  /* -------------------------------------------------------------------------- */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @Column()\n  @Generated('increment')\n  no: number;\n\n  @Column()\n  name: string;\n\n  @CreateDateColumn({\n    name: 'created_at',\n    type: 'timestamp',\n  })\n  created_at: Date;\n\n  @UpdateDateColumn({\n    name: 'updated_at',\n    type: 'timestamp',\n  })\n  updated_at: Date;\n\n  @DeleteDateColumn({\n    name: 'deleted_at',\n    type: 'timestamp',\n    nullable: true,\n    default: null,\n  })\n  deleted_at: Date;\n\n  @VersionColumn()\n  version: number;\n\n  /* -------------------------------------------------------------------------- */\n  /*                                  Relations                                 */\n  /* -------------------------------------------------------------------------- */\n  @OneToOne(type => LeadEntity, leadEntity => leadEntity.lead_manager, {\n    eager: true,\n  })\n  lead: LeadEntity;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeadManagerModule.html":{"url":"modules/LeadManagerModule.html","title":"module - LeadManagerModule","body":"\n                   \n\n\n\n\n    Modules\n    LeadManagerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeadManagerModule\n\n\n\ncluster_LeadManagerModule_providers\n\n\n\n\nLeadManagerService\n\nLeadManagerService\n\n\n\nLeadManagerModule\n\nLeadManagerModule\n\nLeadManagerModule -->\n\nLeadManagerService->LeadManagerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lead-manager/lead-manager.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LeadManagerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LeadManagerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LeadManagerRepository } from './lead-manager.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { LeadManagerService } from './lead-manager.service';\nimport { LeadManagerController } from './lead-manager.controller';\nimport { LeadRepository } from '../lead/lead.repository';\nimport { rabbitmqOptions } from '../config/rabbitmq.config';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'LEAD_MANAGER_SERVICE',\n        transport: Transport.RMQ,\n        options: rabbitmqOptions,\n      },\n    ]),\n    TypeOrmModule.forFeature([LeadManagerRepository, LeadRepository]),\n  ],\n  controllers: [LeadManagerController],\n  providers: [LeadManagerService],\n})\nexport class LeadManagerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeadManagerRepository.html":{"url":"classes/LeadManagerRepository.html","title":"class - LeadManagerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeadManagerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/lead-manager.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                leadRepository\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignLeadToManager\n                            \n                            \n                                    Async\n                                assignOldestLeadToManager\n                            \n                            \n                                    Async\n                                createLeadManager\n                            \n                            \n                                    Async\n                                GetAllLeadManager\n                            \n                            \n                                    Async\n                                getLeadManagerById\n                            \n                            \n                                    Async\n                                isLeadManagerInterest\n                            \n                            \n                                    Async\n                                removeLeadManager\n                            \n                            \n                                    Async\n                                searchLeadManager\n                            \n                            \n                                    Async\n                                softDeleteLeadManager\n                            \n                            \n                                    Async\n                                updateLeadManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            leadRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : getCustomRepository(LeadRepository)\n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/lead-manager.repository.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(LeadManagerRepository.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/lead-manager.repository.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignLeadToManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignLeadToManager(assignLeadToManagerDto: AssignLeadToManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assignLeadToManagerDto\n                                    \n                                                AssignLeadToManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignOldestLeadToManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignOldestLeadToManager(leadManager: LeadManagerEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManager\n                                    \n                                                LeadManagerEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLeadManager(createLeadManagerDto: CreateLeadManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLeadManagerDto\n                                    \n                                                CreateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            GetAllLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllLeadManager(options: IPaginationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            IPaginationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadManagerById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadManagerById(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isLeadManagerInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLeadManagerInterest(leadManagerId: string, interest: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interest\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLeadManager(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchLeadManager(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLeadManager(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLeadManager(leadManagerId: string, updateLeadManagerDto: UpdateLeadManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.repository.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLeadManagerDto\n                                    \n                                                UpdateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeadRepository } from './../lead/lead.repository';\nimport { LeadEntity } from './../lead/entities/lead.entity';\nimport {\n  Connection,\n  DeleteResult,\n  EntityRepository,\n  getCustomRepository,\n  Repository,\n  UpdateResult,\n} from 'typeorm';\nimport {\n  ConflictException,\n  Inject,\n  InternalServerErrorException,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport * as _ from 'lodash';\nimport * as config from 'config';\nimport {\n  IPaginationOptions,\n  paginate,\n  Pagination,\n} from 'nestjs-typeorm-paginate';\nimport { LeadManagerEntity } from './entities/lead-manager.entity';\nimport { CreateLeadManagerDto } from './dto/create-lead-manager.dto';\nimport { UpdateLeadManagerDto } from './dto/update-lead-manager.dto';\nimport { SearchLeadManagerAndCount } from './interfaces/search.interface';\nimport { AssignLeadToManagerDto } from './dto/assign-lead-to-manager.dto';\n\n@EntityRepository(LeadManagerEntity)\nexport class LeadManagerRepository extends Repository {\n  private readonly logger = new Logger(LeadManagerRepository.name);\n  private leadRepository = getCustomRepository(LeadRepository);\n\n  async createLeadManager(\n    createLeadManagerDto: CreateLeadManagerDto,\n  ): Promise {\n    const { name } = createLeadManagerDto;\n    const leadManager = new LeadManagerEntity();\n    _.assign(leadManager, { name });\n    try {\n      return await this.save(leadManager);\n    } catch (error) {\n      if (error.code === '23505')\n        throw new ConflictException('leadManager with this name already exist');\n      else throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async GetAllLeadManager(\n    options: IPaginationOptions,\n  ): Promise> {\n    const leadManagers = await this.createQueryBuilder('lead_managers').orderBy(\n      'created_at',\n      'ASC',\n    );\n    return await paginate(leadManagers, options);\n  }\n\n  async getLeadManagerById(leadManagerId: string): Promise {\n    const leadManager = await this.findOne(leadManagerId);\n    if (!leadManager)\n      throw new NotFoundException('lead manager with this id not found');\n    return leadManager;\n  }\n\n  async searchLeadManager(name: string): Promise {\n    const queryBuilder = await this.createQueryBuilder('lead_managers').where(\n      \"to_tsvector('simple', name) @@ to_tsquery('simple', :name)\",\n      {\n        name: name + ':*',\n      },\n    );\n    try {\n      const resultAndCount = await queryBuilder.getManyAndCount();\n      return { result: resultAndCount[0], count: resultAndCount[1] };\n    } catch (error) {\n      throw new InternalServerErrorException(\n        `error on search lead manager: ${error.message}`,\n      );\n    }\n  }\n\n  async assignLeadToManager(\n    assignLeadToManagerDto: AssignLeadToManagerDto,\n  ): Promise {\n    const { leadId, leadManagerId } = assignLeadToManagerDto;\n    const lead = await this.leadRepository.getLeadById(leadId);\n    const leadManager = await this.getLeadManagerById(leadManagerId);\n    leadManager.lead = lead;\n    try {\n      return await this.save(leadManager);\n    } catch (error) {\n      if (error.code === '23505')\n        throw new ConflictException('this leadManager already have lead');\n      else throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async assignOldestLeadToManager(\n    leadManager: LeadManagerEntity,\n  ): Promise {\n    if (leadManager.hasOwnProperty('lead'))\n      throw new ConflictException('this lead manager already has lead');\n    const lead = await this.leadRepository.getOldLeadToAssign();\n    if (lead) {\n      leadManager.lead = lead;\n      return await this.save(leadManager);\n    }\n  }\n\n  async updateLeadManager(\n    leadManagerId: string,\n    updateLeadManagerDto: UpdateLeadManagerDto,\n  ): Promise {\n    const leadManager = await this.getLeadManagerById(leadManagerId);\n    _.assign(leadManager, updateLeadManagerDto);\n    try {\n      await this.save(leadManager);\n    } catch (error) {\n      if (error.code === '23505') throw new ConflictException(error.detail);\n      else throw new InternalServerErrorException(error.message);\n    }\n    return leadManager;\n  }\n\n  async isLeadManagerInterest(\n    leadManagerId: string,\n    interest: boolean,\n  ): Promise {\n    const leadManager = await this.getLeadManagerById(leadManagerId);\n    if (!leadManager.lead)\n      throw new NotFoundException('This lead Manager has not any lead');\n    const lead = leadManager.lead;\n    _.assign(lead, {\n      interest,\n      lead_manager: null,\n    });\n    await this.leadRepository.save(lead);\n    return leadManager;\n  }\n\n  async softDeleteLeadManager(leadManagerId: string): Promise {\n    return await this.softDelete(leadManagerId);\n  }\n\n  async removeLeadManager(leadManagerId: string): Promise {\n    const leadManager = await this.getLeadManagerById(leadManagerId);\n    leadManager.lead = null;\n    await this.save(leadManager);\n    return await this.delete(leadManagerId);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeadManagerService.html":{"url":"injectables/LeadManagerService.html","title":"injectable - LeadManagerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LeadManagerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/lead-manager.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignLeadToManager\n                            \n                            \n                                    Async\n                                assignOldestLeadToManager\n                            \n                            \n                                    Async\n                                createLeadManager\n                            \n                            \n                                    Async\n                                GetAllLeadManager\n                            \n                            \n                                    Async\n                                getLeadManagerById\n                            \n                            \n                                    Async\n                                isLeadManagerInterest\n                            \n                            \n                                    Async\n                                removeLeadManager\n                            \n                            \n                                    Async\n                                searchLeadManager\n                            \n                            \n                                    Async\n                                softDeleteLeadManager\n                            \n                            \n                                    Async\n                                updateLeadManager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(leadManagerRepository: LeadManagerRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lead-manager/lead-manager.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        leadManagerRepository\n                                                  \n                                                        \n                                                                        LeadManagerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignLeadToManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignLeadToManager(assignLeadToManagerDto: AssignLeadToManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    assignLeadToManagerDto\n                                    \n                                                AssignLeadToManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignOldestLeadToManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignOldestLeadToManager(leadManager: LeadManagerEntity)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManager\n                                    \n                                                LeadManagerEntity\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLeadManager(createLeadManagerDto: CreateLeadManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLeadManagerDto\n                                    \n                                                CreateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            GetAllLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllLeadManager(options: IPaginationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            IPaginationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadManagerById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadManagerById(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            isLeadManagerInterest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isLeadManagerInterest(leadManagerId: string, interest: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    interest\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLeadManager(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            searchLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchLeadManager(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLeadManager(leadManagerId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLeadManager\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLeadManager(leadManagerId: string, updateLeadManagerDto: UpdateLeadManagerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead-manager/lead-manager.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadManagerId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLeadManagerDto\n                                    \n                                                UpdateLeadManagerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(LeadManagerService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/lead-manager.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { LeadManagerRepository } from './lead-manager.repository';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { InjectConnection, InjectRepository } from '@nestjs/typeorm';\nimport { CreateLeadManagerDto } from './dto/create-lead-manager.dto';\nimport { UpdateLeadManagerDto } from './dto/update-lead-manager.dto';\nimport { LeadManagerEntity } from './entities/lead-manager.entity';\nimport { IPaginationOptions, Pagination } from 'nestjs-typeorm-paginate';\nimport { Connection, DeleteResult, UpdateResult } from 'typeorm';\nimport { SearchLeadManagerAndCount } from './interfaces/search.interface';\nimport { AssignLeadToManagerDto } from './dto/assign-lead-to-manager.dto';\n\n@Injectable()\nexport class LeadManagerService {\n  private readonly logger = new Logger(LeadManagerService.name);\n\n  constructor(\n    @InjectRepository(LeadManagerRepository)\n    private leadManagerRepository: LeadManagerRepository,\n  ) {}\n\n  async createLeadManager(\n    createLeadManagerDto: CreateLeadManagerDto,\n  ): Promise {\n    return await this.leadManagerRepository.createLeadManager(\n      createLeadManagerDto,\n    );\n  }\n\n  async GetAllLeadManager(\n    options: IPaginationOptions,\n  ): Promise> {\n    return await this.leadManagerRepository.GetAllLeadManager(options);\n  }\n\n  async getLeadManagerById(leadManagerId: string): Promise {\n    return await this.leadManagerRepository.getLeadManagerById(leadManagerId);\n  }\n\n  async searchLeadManager(name: string): Promise {\n    return await this.leadManagerRepository.searchLeadManager(name);\n  }\n\n  async assignLeadToManager(\n    assignLeadToManagerDto: AssignLeadToManagerDto,\n  ): Promise {\n    return await this.leadManagerRepository.assignLeadToManager(\n      assignLeadToManagerDto,\n    );\n  }\n\n  async assignOldestLeadToManager(\n    leadManager: LeadManagerEntity,\n  ): Promise {\n    return await this.leadManagerRepository.assignOldestLeadToManager(\n      leadManager,\n    );\n  }\n\n  async updateLeadManager(\n    leadManagerId: string,\n    updateLeadManagerDto: UpdateLeadManagerDto,\n  ): Promise {\n    return await this.leadManagerRepository.updateLeadManager(\n      leadManagerId,\n      updateLeadManagerDto,\n    );\n  }\n\n  async isLeadManagerInterest(\n    leadManagerId: string,\n    interest: boolean,\n  ): Promise {\n    return await this.leadManagerRepository.isLeadManagerInterest(\n      leadManagerId,\n      interest,\n    );\n  }\n\n  async softDeleteLeadManager(leadManagerId: string): Promise {\n    return await this.leadManagerRepository.softDeleteLeadManager(\n      leadManagerId,\n    );\n  }\n\n  async removeLeadManager(leadManagerId: string): Promise {\n    return await this.leadManagerRepository.removeLeadManager(leadManagerId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LeadModule.html":{"url":"modules/LeadModule.html","title":"module - LeadModule","body":"\n                   \n\n\n\n\n    Modules\n    LeadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LeadModule\n\n\n\ncluster_LeadModule_providers\n\n\n\n\nLeadService\n\nLeadService\n\n\n\nLeadModule\n\nLeadModule\n\nLeadModule -->\n\nLeadService->LeadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lead/lead.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LeadService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LeadController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LeadRepository } from './lead.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { LeadService } from './lead.service';\nimport { LeadController } from './lead.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([LeadRepository])],\n  controllers: [LeadController],\n  providers: [LeadService],\n})\nexport class LeadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LeadRepository.html":{"url":"classes/LeadRepository.html","title":"class - LeadRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LeadRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/lead.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bulkInsert\n                            \n                            \n                                    Async\n                                createLead\n                            \n                            \n                                    Async\n                                getAllLead\n                            \n                            \n                                    Async\n                                getLeadById\n                            \n                            \n                                    Async\n                                getOldLeadToAssign\n                            \n                            \n                                    Async\n                                removeLead\n                            \n                            \n                                    Async\n                                softDeleteLead\n                            \n                            \n                                    Async\n                                updateLead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(LeadRepository.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/lead/lead.repository.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bulkInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkInsert(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLead(leadCredentialsDto: LeadCredentialsDto, debug: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    debug\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLead(options: IPaginationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            IPaginationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadById(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOldLeadToAssign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOldLeadToAssign()\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLead(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLead(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLead(leadId: string, leadCredentialsDto: LeadCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.repository.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LeadEntity } from './entities/lead.entity';\nimport {\n  DeleteResult,\n  EntityRepository,\n  Repository,\n  UpdateResult,\n} from 'typeorm';\nimport {\n  BadRequestException,\n  ConflictException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { LeadCredentialsDto } from './dto/lead-credentials.dto';\nimport * as _ from 'lodash';\nimport {\n  IPaginationOptions,\n  paginate,\n  Pagination,\n} from 'nestjs-typeorm-paginate';\nimport { bulkToLeadObject } from './../common/utils/bulk.utils';\nimport {\n  BulkInsertResponseInterface,\n  ErrorReasonInterface,\n  LeadInterface,\n} from './interfaces/lead.interface';\n\n@EntityRepository(LeadEntity)\nexport class LeadRepository extends Repository {\n  private readonly logger = new Logger(LeadRepository.name);\n\n  async createLead(\n    leadCredentialsDto: LeadCredentialsDto,\n    debug: boolean = false,\n  ): Promise {\n    const lead = new LeadEntity();\n    _.assign(lead, leadCredentialsDto);\n    try {\n      await this.save(lead);\n    } catch (error) {\n      if (debug) throw error;\n      else if (error.code === '23505')\n        throw new ConflictException(error.detail);\n      else throw new InternalServerErrorException(error.message);\n    }\n    return lead;\n  }\n\n  async getAllLead(\n    options: IPaginationOptions,\n  ): Promise> {\n    const leads = await this.createQueryBuilder('lead').orderBy(\n      'created_at',\n      'ASC',\n    );\n    return await paginate(leads, options);\n  }\n\n  async getLeadById(leadId: string): Promise {\n    return await this.findOne(leadId);\n  }\n\n  async getOldLeadToAssign() {\n    return await this.findOne({\n      where: { lead_manager: null, interest: null, deleted_at: null },\n      order: { created_at: 'ASC' },\n    });\n  }\n\n  async updateLead(\n    leadId: string,\n    leadCredentialsDto: LeadCredentialsDto,\n  ): Promise {\n    const lead = await this.getLeadById(leadId);\n    _.assign(lead, leadCredentialsDto);\n    try {\n      await this.save(lead);\n    } catch (error) {\n      if (error.code === '23505') throw new ConflictException(error.detail);\n      else throw new InternalServerErrorException(error.message);\n    }\n    return lead;\n  }\n\n  async softDeleteLead(leadId: string): Promise {\n    return await this.softDelete(leadId);\n  }\n\n  async removeLead(leadId: string): Promise {\n    return await this.delete(leadId);\n  }\n\n  async bulkInsert(\n    file: Express.Multer.File,\n  ): Promise {\n    if (!file) throw new BadRequestException('file not found.');\n    const errors: ErrorReasonInterface[] = [];\n    const leads: LeadInterface[] = bulkToLeadObject(file);\n    for (const lead of leads)\n      try {\n        await this.createLead(lead, true);\n      } catch (error) {\n        if (error.code === '23505')\n          errors.push({ ...lead, error: 'email or phone already exists' });\n        else\n          errors.push({\n            ...lead,\n            error: 'email/phone not provided or invalid',\n          });\n      }\n    const all = leads.length;\n    const failds = errors.length;\n    const success = all - failds;\n    return { all, success, failds, reason: errors };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LeadService.html":{"url":"injectables/LeadService.html","title":"injectable - LeadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LeadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead/lead.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                bulkInsert\n                            \n                            \n                                    Async\n                                createLead\n                            \n                            \n                                    Async\n                                getAllLead\n                            \n                            \n                                    Async\n                                getLeadById\n                            \n                            \n                                    Async\n                                getOldLeadToAssign\n                            \n                            \n                                    Async\n                                removeLead\n                            \n                            \n                                    Async\n                                softDeleteLead\n                            \n                            \n                                    Async\n                                updateLead\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(leadRepository: LeadRepository)\n                    \n                \n                        \n                            \n                                Defined in src/lead/lead.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        leadRepository\n                                                  \n                                                        \n                                                                        LeadRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bulkInsert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bulkInsert(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createLead(leadCredentialsDto: LeadCredentialsDto, debug: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    debug\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLead(options: IPaginationOptions)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            IPaginationOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLeadById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLeadById(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getOldLeadToAssign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOldLeadToAssign()\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            removeLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    removeLead(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteLead(leadId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateLead\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLead(leadId: string, leadCredentialsDto: LeadCredentialsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/lead/lead.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    leadId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    leadCredentialsDto\n                                    \n                                                LeadCredentialsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(LeadService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/lead/lead.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { LeadRepository } from './lead.repository';\nimport { Injectable, Logger, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { LeadCredentialsDto } from './dto/lead-credentials.dto';\nimport { LeadEntity } from './entities/lead.entity';\nimport { IPaginationOptions, Pagination } from 'nestjs-typeorm-paginate';\nimport { DeleteResult, UpdateResult } from 'typeorm';\nimport { BulkInsertResponseInterface } from './interfaces/lead.interface';\n\n@Injectable()\nexport class LeadService {\n  private readonly logger = new Logger(LeadService.name);\n\n  constructor(\n    @InjectRepository(LeadRepository) private leadRepository: LeadRepository,\n  ) {}\n\n  async createLead(\n    leadCredentialsDto: LeadCredentialsDto,\n    debug: boolean = false,\n  ): Promise {\n    return await this.leadRepository.createLead(leadCredentialsDto, debug);\n  }\n\n  async getAllLead(\n    options: IPaginationOptions,\n  ): Promise> {\n    return await this.leadRepository.getAllLead(options);\n  }\n\n  async getLeadById(leadId: string): Promise {\n    const lead = await this.leadRepository.getLeadById(leadId);\n    if (!lead) throw new NotFoundException('lead with this id not found');\n    return lead;\n  }\n\n  async getOldLeadToAssign() {\n    return await this.leadRepository.getOldLeadToAssign();\n  }\n\n  async updateLead(\n    leadId: string,\n    leadCredentialsDto: LeadCredentialsDto,\n  ): Promise {\n    return await this.leadRepository.updateLead(leadId, leadCredentialsDto);\n  }\n\n  async softDeleteLead(leadId: string): Promise {\n    return await this.leadRepository.softDeleteLead(leadId);\n  }\n\n  async removeLead(leadId: string): Promise {\n    return await this.leadRepository.removeLead(leadId);\n  }\n\n  async bulkInsert(\n    file: Express.Multer.File,\n  ): Promise {\n    return await this.leadRepository.bulkInsert(file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchLeadManagerAndCount.html":{"url":"interfaces/SearchLeadManagerAndCount.html","title":"interface - SearchLeadManagerAndCount","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SearchLeadManagerAndCount\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/interfaces/search.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        result\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                    \n                                \n                                \n                                    \n                                        result:         LeadManagerEntity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LeadManagerEntity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LeadManagerEntity } from '../entities/lead-manager.entity';\n\nexport interface SearchLeadManagerAndCount {\n  result: LeadManagerEntity[];\n  count: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLeadManagerDto.html":{"url":"classes/UpdateLeadManagerDto.html","title":"class - UpdateLeadManagerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLeadManagerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lead-manager/dto/update-lead-manager.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({example: 'Kasra'})@IsString()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/lead-manager/dto/update-lead-manager.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\nimport { CreateLeadManagerDto } from './create-lead-manager.dto';\n\nexport class UpdateLeadManagerDto extends PartialType(CreateLeadManagerDto) {\n  @ApiProperty({ example: 'Kasra' })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/utils/bulk.utils.ts\n            \n            variable\n            bulkToLeadObject\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rabbitmq.config.ts\n            \n            variable\n            rabbitmqOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rabbitmq.config.ts\n            \n            variable\n            RMQConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/ratelimit.config.ts\n            \n            variable\n            ratelimitConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/swagger.config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead-manager/dto/assign-lead-to-manager.dto.ts\n            \n            class\n            AssignLeadToManagerDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lead-manager/dto/create-lead-manager.dto.ts\n            \n            class\n            CreateLeadManagerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lead-manager/dto/update-lead-manager.dto.ts\n            \n            class\n            UpdateLeadManagerDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/lead-manager/entities/lead-manager.entity.ts\n            \n            class\n            LeadManagerEntity\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lead-manager/interfaces/search.interface.ts\n            \n            interface\n            SearchLeadManagerAndCount\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.controller.ts\n            \n            controller\n            LeadManagerController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.controller.ts\n            \n            variable\n            events\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.controller.ts\n            \n            variable\n            pagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.controller.ts\n            \n            variable\n            RMQConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.controller.ts\n            \n            variable\n            server\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.repository.ts\n            \n            class\n            LeadManagerRepository\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lead-manager/lead-manager.service.ts\n            \n            injectable\n            LeadManagerService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lead/dto/lead-credentials.dto.ts\n            \n            class\n            LeadCredentialsDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lead/entities/lead.entity.ts\n            \n            class\n            LeadEntity\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/lead/interfaces/lead.interface.ts\n            \n            interface\n            BulkInsertResponseInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lead/interfaces/lead.interface.ts\n            \n            interface\n            ErrorReasonInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/lead/interfaces/lead.interface.ts\n            \n            interface\n            LeadInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/lead/lead.controller.ts\n            \n            controller\n            LeadController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/lead/lead.controller.ts\n            \n            variable\n            pagination\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead/lead.controller.ts\n            \n            variable\n            server\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/lead/lead.repository.ts\n            \n            class\n            LeadRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/lead/lead.service.ts\n            \n            injectable\n            LeadService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            RMQConfig\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/event-emitter : 0.0.3\n        \n            @nestjs/microservices : ^7.6.13\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.15\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @types/dotenv : ^8.2.0\n        \n            amqp-connection-manager : ^3.2.2\n        \n            amqplib : ^0.7.0\n        \n            axios : ^0.21.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            compression : ^1.7.4\n        \n            config : ^3.3.4\n        \n            cross-env : ^7.0.3\n        \n            csv-parser : ^3.0.0\n        \n            dotenv : ^8.2.0\n        \n            express-rate-limit : ^5.2.6\n        \n            faker : ^5.4.0\n        \n            helmet : ^4.4.1\n        \n            lodash : ^4.17.21\n        \n            nestjs-typeorm-paginate : ^2.3.2\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            typeorm : ^0.2.31\n        \n            typeorm-seeding : ^1.6.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeadManagerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LeadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LeadManagerModule\n\n\n\ncluster_LeadManagerModule_providers\n\n\n\ncluster_LeadModule\n\n\n\ncluster_LeadModule_providers\n\n\n\n\nLeadManagerModule\n\nLeadManagerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nLeadManagerModule->AppModule\n\n\n\n\n\nLeadModule\n\nLeadModule\n\nAppModule -->\n\nLeadModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLeadManagerService\n\nLeadManagerService\n\nLeadManagerModule -->\n\nLeadManagerService->LeadManagerModule\n\n\n\n\n\nLeadService\n\nLeadService\n\nLeadModule -->\n\nLeadService->LeadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bulkToLeadObject   (src/.../bulk.utils.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            events   (src/.../lead-manager.controller.ts)\n                        \n                        \n                            logger   (src/.../typeorm.config.ts)\n                        \n                        \n                            pagination   (src/.../lead.controller.ts)\n                        \n                        \n                            pagination   (src/.../lead-manager.controller.ts)\n                        \n                        \n                            rabbitmqOptions   (src/.../rabbitmq.config.ts)\n                        \n                        \n                            ratelimitConfig   (src/.../ratelimit.config.ts)\n                        \n                        \n                            RMQConfig   (src/.../main.ts)\n                        \n                        \n                            RMQConfig   (src/.../rabbitmq.config.ts)\n                        \n                        \n                            RMQConfig   (src/.../lead-manager.controller.ts)\n                        \n                        \n                            server   (src/.../lead.controller.ts)\n                        \n                        \n                            server   (src/.../lead-manager.controller.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger.config.ts)\n                        \n                        \n                            typeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/utils/bulk.utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bulkToLeadObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : file => {\n  const bulkData = file.buffer.toString();\n  const rows = bulkData.split('\\r\\n');\n  const leads = [];\n  for (const row of rows) {\n    const rowArray = row.split(',');\n    leads.push({\n      name: rowArray[0],\n      family_name: rowArray[1],\n      email: rowArray[2],\n      cellphone: rowArray[3],\n    });\n  }\n  return leads;\n}\n                        \n                    \n\n\n            \n        \n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger('TypeORMConfig')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  host: process.env.DB_HOSTNAME || dbConfig.host,\n  port: process.env.DB_PORT || dbConfig.port,\n  username: process.env.DB_USERNAME || dbConfig.username,\n  password: process.env.DB_PASSWORD || dbConfig.password,\n  database: process.env.DB_DB_NAME || dbConfig.database,\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n  migrations: [__dirname + '/../**/*.migration.{js,ts}'],\n  cache: true,\n  synchronize: process.env.TYPEORM_SYNC || dbConfig.synchronize,\n}\n                        \n                    \n\n\n            \n        \n\n    src/lead-manager/lead-manager.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('events')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('pagination')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RMQConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('RMQ')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('server')\n                        \n                    \n\n\n            \n        \n\n    src/lead/lead.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('pagination')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            server\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('server')\n                        \n                    \n\n\n            \n        \n\n    src/config/rabbitmq.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rabbitmqOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  urls: RMQConfig.urls,\n  queue: RMQConfig.queue,\n  queueOptions: {\n    durable: true,\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RMQConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('RMQ')\n                        \n                    \n\n\n            \n        \n\n    src/config/ratelimit.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ratelimitConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : rateLimit({\n  windowMs: 60 * 60 * 1000, // 1 hour\n  max: 100, // limit each IP to 100 requests per windowMs\n  message: 'too many request for this ip, please try again after 1 hour',\n})\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RMQConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('RMQ')\n                        \n                    \n\n\n            \n        \n\n    src/config/swagger.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            swaggerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  options: new DocumentBuilder()\n    .setTitle('Test API')\n    .setDescription('&#10084;&#65039; Create with love &#10084;&#65039;')\n    .setVersion('1.0')\n    .build(),\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
